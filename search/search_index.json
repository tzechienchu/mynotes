{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Frank's Notebook","text":""},{"location":"#markdown-doc-links","title":"Markdown Doc Links","text":"<p>For full documentation visit mkdocs.org.</p> <p>Markdown Guide Visit markdownguide.org.</p> <p>Material Mkdocs mkdocs-material.</p>"},{"location":"#install-mkdocs-material","title":"Install mkdocs-material","text":"<pre><code>pip install mkdocs-material\n</code></pre>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"#examples","title":"Examples","text":""},{"location":"#link-example","title":"Link Example","text":"<pre><code>![Image](images/2025/Screenshot%20from%202025-01-13%2009-45-40.png){: style=\"height:150px\"}\n</code></pre> <p> evolutionaryneuralcodinglab</p> <pre><code>[![Image](images/2025/Screenshot%20from%202025-01-13%2009-45-40.png 'tips'){: style=\"height:150px\"} evolutionaryneuralcodinglab](https://www.evolutionaryneuralcodinglab.sites.tau.ac.il/)\n</code></pre> <p>Github URL</p> <pre><code>Github [URL](https://github.com/EvolutionaryNeuralCodingLab)\n</code></pre>"},{"location":"#table-example","title":"Table Example","text":"<pre><code>| Tables   |      Are      |  Cool |\n|----------|:-------------:|------:|\n| col 1 is |  left-aligned | $1600 |\n| col 2 is |    centered   |   $12 |\n| col 3 is | right-aligned |    $1 |\n</code></pre> Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1"},{"location":"#comment","title":"Comment","text":"<pre><code>&lt;!---\nThese are Comments\nLine 1\nLine 2 \n---&gt;\n</code></pre>"},{"location":"#markdown-help","title":"Markdown Help","text":"<p>Markdown Doc from codecademy</p>"},{"location":"#tze-chien-chu-blog","title":"Tze-Chien Chu Blog","text":"<p>Tze-Chien Chu Blog</p>"},{"location":"Y2024/","title":"2024","text":""},{"location":"Y2024/#fpga","title":"FPGA","text":""},{"location":"Y2024/#riffa","title":"RIffa","text":"<p>RIFFA_A_Reusable_Integration_Framework_for_FPGA_Accelerators</p> <p>https://kastner.ucsd.edu/wp-content/uploads/2014/04/admin/fpl-riffa2.pdf</p> <p>https://github.com/KastnerRG/riffa</p>"},{"location":"Y2024/#spi-to-ice40-programming","title":"SPI to ICE40 Programming","text":"<p>OLIMEX 32U4 to ICE40</p>"},{"location":"Y2024/#fir-on-xilinx","title":"FIR on Xilinx","text":"<p>AXI4 Stream FIR IP</p>"},{"location":"Y2024/#stm32","title":"STM32","text":""},{"location":"Y2024/#onewire","title":"Onewire","text":"<p>My Gist Gist</p> <p>tutorials pycom.io</p> <p>nimaltd ds18b20 github.com</p>"},{"location":"Y2024/#micropython-low-power","title":"Micropython Low Power","text":"<p>https://github.com/peterhinch/micropython-micropower</p>"},{"location":"Y2024/#stm32-arduino-dac-dma-mode","title":"STM32 Arduino DAC DMA Mode","text":"<p>STM32 Arduino DAC DMA Mode</p>"},{"location":"Y2024/#pico","title":"PICO","text":""},{"location":"Y2024/#pio-programming","title":"PIO Programming","text":"<p>https://circuitcellar.com/research-design-hub/basics-of-design/programmable-io-programming/</p>"},{"location":"Y2024/#vscode-pico-sdk-extension","title":"VSCode PICO SDK Extension","text":"<p>https://github.com/raspberrypi/pico-vscode</p> <pre><code>1.github\n2.build-essentail\n3.gdb-multiarch\n4.libhidapi-hidraw0\n\n1.openocd rules\n2.picotool.rules\n</code></pre>"},{"location":"Y2024/#pi-pico-2s-hstx","title":"Pi Pico 2's HSTX","text":"<p>High-speed data acquisition with Raspberry Pi Pico 2's HSTX interface and HDMI to USB 3.0 video capture dongle - CNX Software</p> <p>Pi Pico 2's HSTX</p>"},{"location":"Y2024/#lvgl-port-for-micropython","title":"LVGL Port for Micropython","text":"<p>https://forum.lvgl.io/t/st7789-generic-driver-bgr-option-color-display-is-wrong/9525(Before 1.19)</p> <pre><code>sudo apt install git cmake gcc-arm-none-eabi build-essential\n\ngit clone https://github.com/lvgl/lv_micropython.git\ncd lv_micropython\ngit submodule update --init --recursive lib/lv_bindings\nvim lib/lv_binding/lv_conf.h   change COLOR_DEPTH 32 to 16\n\nmake -C ports/rp2 BOARD=PICO submodules\nmake -j -C mpy-cross\nmake -j -C ports/rp2 BOARD=PICO USER_C_MODULES=... /... /lib/lv_bindings/bindings.cmake\n\nyou can also enable more font size in\nlv_conf.h\n</code></pre> <p>RGB24 to RGB16 565 Converter</p> <p>https://online-converting.com/image/convert2bmp/#google_vignette https://cloudconvert.com/bmp-converter</p>"},{"location":"Y2024/#raspberry-pi","title":"Raspberry Pi","text":""},{"location":"Y2024/#ptp-on-pi","title":"PTP on Pi","text":"<p>https://medium.com/inatech/sync-your-clocks-better-ptp-settings-on-raspberry-pi-37a9a54e4802 </p> <p>https://github.com/joebell/piFLIR</p> <p>https://www.linkedin.com/posts/ahmadexp_this-was-super-exciting-the-new-raspberry-activity-7135113414137286656-tQ3u/</p> <p>https://www.linkedin.com/posts/ahmadexp_ptp-with-pps-output-on-the-raspberry-pi-4-activity-7182065386106880000-b2iY/</p> <p>https://www.jeffgeerling.com/blog/2021/time-card-and-ptp-on-raspberry-pi-compute-module-4</p> <p>https://github.com/opencomputeproject/Time-Appliance-Project/tree/master/Time-Card</p>"},{"location":"Y2024/#jetson","title":"Jetson","text":""},{"location":"Y2024/#lcd","title":"LCD","text":"<p>https://qiita.com/kitazaki/items/b2d9e4b609f5de709e7e</p>"},{"location":"Y2024/#commutators","title":"Commutators","text":""},{"location":"Y2024/#examples","title":"Examples","text":"<p>https://github.com/KaetzelLab/Open-MAC</p> <p>https://www.sciencedirect.com/science/article/pii/S2468067223000366</p> <p>https://github.com/ThomasAkam/active_commutator</p>"},{"location":"Y2024/#pcb","title":"PCB","text":""},{"location":"Y2024/#pcb-ground-plane","title":"PCB Ground Plane","text":"<p>the-basic-guidelines-for-layout-design-of-mixed-signal</p>"},{"location":"facts/","title":"Facts","text":""},{"location":"facts/#antibody-iga-igb-ige","title":"Antibody IgA, IgB,... IgE","text":"<p> Antibody Type</p>"},{"location":"facts/#silicon-gate-fin-gaa","title":"Silicon Gate FIN GAA","text":""},{"location":"facts/#animal-hearing-frequency-range","title":"Animal hearing frequency range","text":""},{"location":"github/","title":"Github","text":""},{"location":"github/#linux","title":"Linux","text":""},{"location":"github/#pciutils","title":"pciutils","text":"<p>pciutils</p>"},{"location":"github/#tkdocs-examples","title":"TkDocs Examples","text":"<p>TkDocs Examples</p>"},{"location":"github/#llma-use-c","title":"LLMA use C","text":"<p>LLMA use C</p>"},{"location":"github/#awesom-c","title":"Awesom C","text":"<p>Awesome C</p>"},{"location":"github/#pubsub-c","title":"PubSub C","text":"<p>Pubsub C</p>"},{"location":"github/#async-programming","title":"Async Programming","text":"<p>AsyncProgramming</p>"},{"location":"github/#pi-camera-connect","title":"Pi Camera Connect","text":"<p>Pi Camera Connect</p>"},{"location":"github/#protothread-implementation","title":"Protothread Implementation","text":"<p>Protothread Implementation</p>"},{"location":"github/#linux_driver_tutorial-from-johannes4linux","title":"Linux_Driver_Tutorial from Johannes4Linux","text":"<p>Linux_Driver_Tutorial</p>"},{"location":"github/#web","title":"Web","text":""},{"location":"github/#hardcore-functional-architecture","title":"hardcore-functional-architecture","text":"<p>hardcore-functional-architecture</p>"},{"location":"github/#hardcore-functional-js-v2","title":"hardcore-functional-js-v2","text":"<p>hardcore-functional-js-v2</p>"},{"location":"github/#probabilistic-programming-for-the-web","title":"Probabilistic programming for the web","text":"<p>Probabilistic programming for the web</p>"},{"location":"github/#python","title":"\u201c\u7ed3\u5df4\u201d\u4e2d\u6587\u5206\u8bcd\uff1a\u505a\u6700\u597d\u7684 Python \u4e2d\u6587\u5206\u8bcd\u7ec4\u4ef6","text":"<p>\u201c\u7ed3\u5df4\u201d\u4e2d\u6587\u5206\u8bcd</p>"},{"location":"github/#node-mongodb-s3-backup","title":"node-mongodb-s3-backup","text":"<p>node-mongodb-s3-backup</p>"},{"location":"github/#nodejs-stream-handbook","title":"Nodejs stream handbook","text":"<p>Nodejs stream handbook</p>"},{"location":"github/#internet-of-streams-use-rust","title":"Internet of Streams use Rust","text":"<p>Internet of Streams use Rust</p>"},{"location":"github/#embedded","title":"Embedded","text":""},{"location":"github/#logic-analyer-use-pico","title":"Logic Analyer use Pico","text":"<p>Logic Analyer use Pico</p>"},{"location":"github/#v3s_licheepi_sdk","title":"v3s_licheepi_sdk","text":"<p>v3s_licheepi_sdk</p>"},{"location":"github/#flashdb","title":"FlashDB","text":"<p>FlashDB</p>"},{"location":"github/#asynch","title":"async.h","text":"<p>async.h</p>"},{"location":"github/#gowin-usb2peripheral","title":"Gowin USB2Peripheral","text":"<p>Gowin USB2Peripheral</p>"},{"location":"github/#tinygo-lessions","title":"Tinygo Lessions","text":"<p>Tinygo Lessions</p>"},{"location":"github/#stm32-uart-use-dma","title":"STM32 UART use DMA","text":"<p>STM32 UART use DMA</p>"},{"location":"github/#fpga","title":"FPGA","text":""},{"location":"github/#xilinx-bitstream-analizing-tool","title":"Xilinx bitstream analizing tool","text":"<p>Xilinx bitstream analizing tool </p>"},{"location":"github/#oh-open-hardware-for-chip-designers","title":"OH! Open Hardware for Chip Designers","text":"<p>OH! Open Hardware for Chip Designers</p>"},{"location":"github/#thunderscope","title":"ThunderScope","text":"<p>ThunderScope</p>"},{"location":"github/#luna-an-amaranth-hdl-library-for-usb","title":"LUNA: an Amaranth HDL library for USB","text":"<p>Luna</p>"},{"location":"github/#icesugar","title":"icesugar","text":"<p>icesugar</p>"},{"location":"github/#ice40_ultraplus_examples","title":"ice40_ultraplus_examples","text":"<p>ice40_ultraplus_examples</p>"},{"location":"github/#kintex-7-ov13850-verilog","title":"Kintex-7-OV13850-Verilog","text":"<p>Kintex-7-OV13850-Verilog</p>"},{"location":"github/#fpga-hash-table","title":"fpga-hash-table","text":"<p>fpga-hash-table</p>"},{"location":"github/#riffa_builder","title":"RIFFA_Builder","text":"<p>RIFFA_Builder</p>"},{"location":"github/#artix-7-pcie-riffa","title":"Artix-7-PCIE-Riffa","text":"<p>Artix-7-PCIE-Riffa</p>"},{"location":"github/#small-qspi-flash-memory-programmer-in-verilog","title":"Small (Q)SPI flash memory programmer in Verilog","text":"<p>Small (Q)SPI flash memory programmer in Verilog </p>"},{"location":"github/#fpga-mcmc","title":"FPGA MCMC","text":"<p>FPGA MCMC</p>"},{"location":"github/#fpga-mag-18","title":"FPGA MAG 18","text":"<p>FPGAMAG18</p>"},{"location":"github/#chisel-study-1","title":"chisel-study 1","text":"<p>chisel-study</p>"},{"location":"github/#td4-with-chisel","title":"TD4-with-Chisel","text":"<p>TD4-with-Chisel</p>"},{"location":"github/#sv2chisel","title":"sv2chisel","text":"<p>sv2chisel</p>"},{"location":"github/#spiflashcontroller","title":"SPIFlashController","text":"<p>SPIFlashController</p>"},{"location":"github/#the-open-source-fpga-foundation","title":"The Open-Source FPGA Foundation","text":"<p>The Open-Source FPGA Foundation</p>"},{"location":"github/#meta-hdl","title":"Meta HDL","text":"<p>Meta HDL</p>"},{"location":"github/#lib-fpga","title":"Lib FPGA","text":"<p>Lib FPGA</p> <p>http://fpgacpu.ca/</p>"},{"location":"github/#la104-pocket-logic-analyser-operating-system","title":"LA104 pocket logic analyser operating system","text":"<p>LA104</p>"},{"location":"github/#nios-with-2-cores","title":"Nios with 2 Cores","text":"<p>Nios 2 Cores</p>"},{"location":"github/#de10-lite-gps","title":"DE10-Lite GPS","text":"<p>DE10-Lite GPS</p>"},{"location":"github/#pattern_matching-fpga","title":"Pattern_Matching-FPGA","text":"<p>Pattern_Matching-FPGA</p>"},{"location":"github/#sdsoc-ultra96","title":"SDSoc-Ultra96","text":"<p>SDSoc-Ultra96</p>"},{"location":"github/#awesome-hdl","title":"Awesome HDL","text":"<p>Awesome HDL</p>"},{"location":"github/#hls-librarty","title":"HLS Librarty","text":"<p>HLS Librarty_</p>"},{"location":"github/#hlx-examples","title":"HLx Examples","text":"<p>HLx Examples</p>"},{"location":"github/#twister-hsl","title":"Twister HSL","text":"<p>Twister HSL</p>"},{"location":"github/#i2c-contolllrt-wothout-camera","title":"i2c Contolllrt wothout Camera","text":"<p>i2c Contolllrt wothout Camera</p>"},{"location":"github/#lighthouse-fpga","title":"lighthouse-fpga","text":"<p>lighthouse-fpga</p>"},{"location":"github/#dna-sequence-mapping-on-fpga","title":"DNA-Sequence-Mapping-on-FPGA","text":"<p>DNA-Sequence-Mapping-on-FPGA</p>"},{"location":"github/#spike-sorting-use-fpga","title":"Spike Sorting use FPGA","text":"<p>Spike Sorting use FPGA</p>"},{"location":"github/#neural-spike-sorting-absolute-value-detector","title":"neural spike sorting absolute-value detector","text":"<p>neural spike sorting absolute-value detector</p>"},{"location":"github/#qsys_my_component","title":"QSYS_MY_Component","text":"<p>QSYS_MY_Component</p>"},{"location":"github/#a-collection-of-chisel-hardware-generators-for-small-but-useful-components","title":"A collection of Chisel hardware generators for small but useful components","text":"<p>A collection of Chisel hardware generators for small but useful components</p>"},{"location":"github/#propeller_1_design","title":"Propeller_1_Design","text":"<p>Propeller_1_Design</p>"},{"location":"github/#verilog-modules-for-ov7670-camera-dcmi-reader","title":"Verilog modules for OV7670 camera (DCMI Reader)","text":"<p>OV7670-Verilog</p>"},{"location":"github/#spispy-open-source-flash-emulation","title":"spispy: Open source flash emulation","text":"<p>Open source flash emulation</p>"},{"location":"github/#ftdi-ft245-style-synchronousasynchronous-fifo-bridge","title":"FTDI FT245 Style Synchronous/Asynchronous FIFO Bridge","text":"<p>FTDI FT245 Bridge</p>"},{"location":"github/#fpga-ftdi245fifo","title":"FPGA-ftdi245fifo","text":"<p>FPGA-ftdi245fifo</p>"},{"location":"papers/","title":"Papers","text":""},{"location":"papers/#fpga","title":"FPGA","text":""},{"location":"papers/#riffa","title":"RIFFA","text":"<p>RIFFA_A_Reusable_Integration_Framework_for_FPGA_Accelerators url</p> <p>https://kastner.ucsd.edu/wp-content/uploads/2014/04/admin/fpl-riffa2.pdf url</p>"},{"location":"papers/#usb3-fifo-interface-for-daq-use-ft60x-and-cypress-fx3","title":"USB3 FIFO Interface for DAQ use FT60X and Cypress FX3","text":"<p>USB3 FIFO Interface for DAQ</p>"},{"location":"papers/#daq-related","title":"DAQ Related","text":""},{"location":"papers/#intan-rhx","title":"Intan RHX","text":"<p>Intan ADC Missing Code and Missing Decison Level (local pdf)</p> <p>Fix SAR ADC Issues (local pdf)</p>"},{"location":"papers/#neuro-science-experiement","title":"Neuro Science Experiement","text":""},{"location":"papers/#falcon","title":"Falcon","text":"<p> Falcon Core</p> <p>Falcon Paper</p>"},{"location":"papers/#reptilearn","title":"ReptiLearn","text":"<p>ReptiLearn: An automated home cage system for behavioral experiments in reptiles without human intervention Paper url or  Local Pdf</p> <p></p> <p></p> <p></p> <p></p> <p>reptiLearn github url</p>"},{"location":"papers/#preytouch","title":"PreyTouch","text":"<p>PreyTouch: a touchscreen-based closed-loop system for studying predator-prey interactions url</p> <p>PreyTouch: a touchscreen-based closed-loop system for studying predator-prey interactions local pdf</p> <p>PreyTouch Github</p> <p></p>"},{"location":"papers/#syntalos","title":"Syntalos","text":"<p>Syntalos Github</p> <p>Syntalos: a software for precise synchronization of simultaneous multi- modal data acquisition and closed-loop interventions</p> <p>Supplementary Information</p> <p></p> <p></p> <p>Experiment Directory Layout</p> <pre><code>The Experiment Directory Layout (EDL) is a specification for a storage layout for data from\nscientific experiments, with primary focus on neuroscientific data. It was originally\ndeveloped for the Syntalos DAQ system, but can be used elsewhere.\n</code></pre>"},{"location":"papers/#star-protocol","title":"Star Protocol","text":"<p>Star Protocol</p> <pre><code>Protocol for precise signal synchronization of\nelectrophysiology, videography, and audio\nrecordings using a custom-made pulse\ngenerator\n</code></pre>"},{"location":"papers/#any-maze","title":"Any-Maze","text":"<p>any-maze</p>"},{"location":"papers/#open-ephys-close-loop","title":"Open Ephys Close Loop","text":"<p>Open_Ephys_electroencephalography_Open_Ephys_EEG_A_modular_low-cost_open-source_solution_to_human_neural_recording Paper url</p> <p>Wearable_EEG_electronics_for_a_Brain-AI_Closed-Loop_System_to_enhance_autonomous_machine_decision-making Paper url</p> <p>Open Ephys Close Loop Calculation</p>"},{"location":"papers/#brain","title":"Brain","text":"<p>How are Concepts Created in the Brain? url</p> <p>The log-dynamic brain: How skewed distributions affect network operations (local pdf)</p>"},{"location":"papers/#system-model-and-simulation","title":"System Model and Simulation","text":""},{"location":"papers/#pysd-system-dynamics-modeling-in-python","title":"PySD: System Dynamics Modeling in Python","text":"<p>PySD: System Dynamics Modeling in Python</p>"},{"location":"personal/","title":"Personal","text":""},{"location":"personal/#_1","title":"\u5931\u667a","text":""},{"location":"personal/#_2","title":"\u5f6d\u5b9b\u5982\u57fa\u91d1\u6703\u8cbb\u7528","text":""},{"location":"personal/#_3","title":"\u8eab\u5fc3\u969c\u7919","text":"<pre><code>\u9762\u5c0d\u8eab\u5fc3\u969c\u7919\u8005\u7684\u56f0\u96e3\n\u8eab\u5fc3\u969c\u7919\u8005\u751f\u6d3b\u670d\u52d9\n\u8eab\u5fc3\u969c\u7919\u756b\u5eca\n\u65e5\u672c \u8eab\u5fc3\u969c\u7919\u8005 \u96fb\u73a9 ePara https://epara.jp/about/\n\u8eab\u5fc3\u969c\u7919\u6559\u5177\u4e2d\u5fc3\n\u5b78\u7fd2\u969c\u7919\u5b78\u7fd2\u4e2d\u5fc3\n\u8eab\u5fc3\u969c\u7919\u6559\u8a08\u7b97\u6a5f\n    \u6642\u9418\u65e5\u671f\n    \u6253\u6298\n    \u5206\u914d\n\u8eab\u969c\u65c5\u884c\n\u7528\u7259\u9f52\u54ac\u7740\u7b46 \u8a98\u767c\u5feb\u6a02\n</code></pre>"},{"location":"personal/#life","title":"Life","text":""},{"location":"personal/#_4","title":"\u6025\u96e3\u98df\u7269\u8207\u7528\u54c1","text":"<pre><code>\u7c73\n\u7f50\u982d\n\u9cf3\u68a8\u7f50\u982d\n\u85e5\u54c1\n</code></pre>"},{"location":"personal/#_5","title":"\u6025\u96e3\u8863\u7269","text":"<pre><code>\u7761\u888b\n\u5916\u5957\n</code></pre>"},{"location":"personal/#_6","title":"\u6025\u96e3\u5e33\u7bf7","text":""},{"location":"personal/#_7","title":"\u6025\u96e3\u884c\u52d5","text":"<pre><code>\u4e09\u8f2a\u8173\u8e0f\u8eca\n</code></pre>"},{"location":"pins/","title":"PINS","text":""},{"location":"pins/#stm32-jlink","title":"STM32 JLink","text":"<pre><code>1.VDD_Target\n2.SW_CLK\n3.GND\n4.SW_DIO\n5.NRST\n6.SW_O\n</code></pre>"},{"location":"pins/#pyboard-stm32f405","title":"PyBoard STM32F405","text":""},{"location":"pins/#ft2232","title":"FT2232","text":""},{"location":"pins/#ft245-fifo","title":"FT245 Fifo","text":"Pin Name Functions I/O AD0 ~ AD7 D0 ~ D7 IO AC0 RXF# output AC1 TXE# output AC2 RD# input AC3 WR# input AC4 SIWR# input AC5 ClockOut output AC6 OE# input"},{"location":"pins/#pyftid-doc","title":"PyFTID Doc","text":"<p>PyFTDI Doc</p>"},{"location":"pins/#spi-and-other-pins","title":"SPI and Other Pins","text":""},{"location":"pins/#ft2232-code","title":"FT2232 Code","text":"<p>Python FTDI for SPI.</p> <pre><code>from pyftdi.ftdi import Ftdi\nFtdi.show_devices()\nfrom pyftdi.spi import SpiController\n\nspi.configure('ftdi://ftdi:2232h:1:7b/1')\nslave = spi.get_port(cs=1, freq=10E6, mode=2)\nwrite_buf = b'\\x01\\x02\\x03'\nread_buf = slave.exchange(write_buf, duplex=True)\n</code></pre>"},{"location":"pins/#raspberry-pi","title":"Raspberry Pi","text":""},{"location":"pins/#pi-4-io","title":"Pi 4 IO","text":""},{"location":"pins/#fpga","title":"FPGA","text":""},{"location":"pins/#nexy-a7-pmod","title":"Nexy A7 PMod","text":""},{"location":"pins/#efinix-t20","title":"Efinix T20","text":""},{"location":"projects/","title":"Projects","text":""},{"location":"projects/#tutorial","title":"Tutorial","text":"<p>Amaranth Tutorial</p>"},{"location":"qandi/","title":"Quotes and Ideas","text":""},{"location":"qandi/#quotes","title":"Quotes","text":""},{"location":"qandi/#_1","title":"\u5927\u6578\u64da\u6642\u4ee3\u7684\u300c\u4e0d\u50b7\u5bb3\u300d\u8a93\u8a00","text":"<pre><code>    \u5927\u6578\u64da\u6642\u4ee3\u7684\u300c\u4e0d\u50b7\u5bb3\u300d\u8a93\u8a00\n    \u672c\u4eba\u5ba3\u8a93\uff0c\u76e1\u6211\u6240\u80fd\uff0c\u9075\u5b88\u6b64\u7d04\uff1a\n    \u6211\u6703\u5c0a\u91cd\u6240\u6709\u4eba\u7684\u6b63\u76f4\u8207\u667a\u6167\uff0c\u77e5\u9053\u4ed6\u5011\u6700\u719f\u6089\u81ea\u5df1\u7684\u751f\u6d3b\uff0c\u6211\u6a02\u65bc\u8207\u4ed6\u5011\u5206\u4eab\u6211\u7684\u77e5\u8b58\u6240\u5e36\u4f86\u7684\u6240\u6709\u6548\u76ca\u3002\n    \u6211\u6703\u5584\u7528\u6211\u7684\u6280\u80fd\u8207\u8cc7\u6e90\uff0c\u70ba\u4eba\u985e\u7684\u6f5b\u80fd\u642d\u8d77\u6a4b\u6881\uff0c\u800c\u4e0d\u662f\u88fd\u9020\u969c\u7919\u3002\u6211\u6703\u6253\u9020\u5de5\u5177\u4f86\u6d88\u9664\u8cc7\u6e90\u8207\u9700\u8981\u8cc7\u6e90\u8005\u4e4b\u9593\u7684\u969c\u7919\u3002\n    \u6211\u4e0d\u6703\u5229\u7528\u6211\u7684\u5c08\u696d\u77e5\u8b58\u4f86\u52a0\u6df1\u7a2e\u65cf\u6b67\u8996\u3001\u968e\u7d1a\u6b67\u8996\u3001\u80fd\u8005\u6b67\u8996\u3001\u6027\u5225\u6b67\u8996\uff0c\u6050\u540c\u5fc3\u7406\u3001\u4ec7\u5916\u5fc3\u7406\u3001\u8de8\u6027\u5225\u6b67\u8996\u3001\u5b97\u6559\u504f\u898b\u7b49\u904e\u5f80\u7684\u504f\u898b\u53ca\u5176\u4ed6\u5f62\u5f0f\u7684\u58d3\u8feb\u3002\n    \u6211\u5c07\u4ee5\u53f2\u70ba\u9452\u3002\u5ffd\u8996\u56db\u767e\u5e74\u4f86\u5c0d\u7aae\u4eba\u7684\u61f2\u7f70\uff0c\u7b49\u65bc\u662f\u9020\u6210\u300c\u7121\u610f\u70ba\u4e4b\u300d\u4f46\u53ef\u60f3\u800c\u77e5\u7684\u5f8c\u679c\u7684\u5171\u72af\u3002\u9015\u81ea\u5047\u8a2d\u5e73\u7b49\u8207\u5584\u610f\u662f\u521d\u59cb\u72c0\u614b\uff0c\u5c31\u6703\u51fa\u73fe\u9019\u7a2e\u5f8c\u679c\u3002\n    \u6211\u6703\u6839\u64da\u6c11\u773e\u7684\u9700\u6c42\u4f86\u6574\u5408\u7cfb\u7d71\uff0c\u800c\u4e0d\u662f\u6839\u64da\u8cc7\u6599\u4f86\u6574\u5408\u7cfb\u7d71\u3002\u6211\u6703\u628a\u7cfb\u7d71\u6574\u5408\u8996\u70ba\u6eff\u8db3\u4eba\u985e\u9700\u6c42\u7684\u6a5f\u5236\uff0c\u800c\u4e0d\u662f\u70ba\u4e86\u65b9\u4fbf\u505a\u96a8\u6642\u96a8\u5730\u7684\u76e3\u63a7\u3002\n    \u6211\u4e0d\u6703\u70ba\u4e86\u8cc7\u6599\u800c\u6536\u96c6\u8cc7\u6599\uff0c\u4e5f\u4e0d\u6703\u56e0\u70ba\u6211\u80fd\u4fdd\u7559\u8cc7\u6599\u5c31\u6536\u96c6\u8cc7\u6599\u3002\n    \u7576\u77e5\u60c5\u540c\u610f\u8207\u8a2d\u8a08\u4fbf\u5229\u6709\u6240\u885d\u7a81\u6642\uff0c\u6c38\u9060\u4ee5\u77e5\u60c5\u540c\u610f\u70ba\u512a\u5148\u3002\n    \u6211\u4e0d\u6703\u8a2d\u8a08\u4e00\u500b\u640d\u5bb3\u7aae\u4eba\u65e2\u6709\u6cd5\u5b9a\u6b0a\u5229\u7684\u8cc7\u6599\u7cfb\u7d71\u3002\n    \u6211\u6703\u8b39\u8a18\uff0c\u6211\u8a2d\u8a08\u7684\u6280\u8853\u4e0d\u662f\u70ba\u4e86\u53d6\u5f97\u8cc7\u6599\u9ede\u3001\u6a5f\u7387\u6216\u578b\u614b\uff0c\u800c\u662f\u70ba\u4e86\u670d\u52d9\u4eba\u985e\n\n    via \u61f2\u7f70\u8ca7\u7aae\n</code></pre>"},{"location":"qandi/#ibm-and-the-holocaust","title":"IBM and The Holocaust","text":"<p>IBM and The Holocaust</p>"},{"location":"qandi/#_2","title":"\u51f1\u56e0\u65af \u7d93\u6fdf\u5b78\u4e0d\u662f\u79d1\u5b78","text":"<pre><code>\"\u51f1\u56e0\u65af\u76f8\u4fe1\uff0c\u53e4\u5178\u7d93\u6fdf\u5b78\u53d7\u5230\u8aa4\u5c0e\uff0c\u81f4\u529b\u65bc\u6a21\u4eff\u7269\u7406\u5b78\u7406\u8ad6\u7684\u56b4\u8b39\uff0c\n\u904e\u4efd\u56fa\u5b88\u865b\u6709\u5176\u8868\u7684\u7cbe\u78ba\uff0c\u537b\u72a7\u7272\u4e86\u7121\u6cd5\u91cf\u5316\u7684\u300c\u96b1\u85cf\u56e0\u7d20\u300d\u3002\"\n</code></pre>"},{"location":"qandi/#_3","title":"\u7a00\u7f3a\u4e0d\u662f\u7576\u4ee3\u6700\u7dca\u8981\u7684\u7d93\u6fdf\u554f\u984c","text":"<pre><code>\"\u7a00\u7f3a\u4e0d\u662f\u7576\u4ee3\u6700\u7dca\u8981\u7684\u7d93\u6fdf\u554f\u984c\uff0c\u56e0\u6b64\u4ee5\u63d0\u5347\u6548\u7387\u548c\u7d93\u6fdf\u7522\u51fa\u70ba\u76ee\u7684\u7684\u6539\u9769\u53ea\u6709\u908a\u7de3\u4f5c\u7528\u3002\u96d6\u7136\u9ad8\u4f2f\u745e\u5c0d\u4e00\u4e5d\u4e94\u4e09\u5e74\u7576\u6642\u525b\u6d6e\u73fe\u7684\u653f\u6cbb\u52d5\u614b\u592a\u904e\u6a02\u89c0\uff0c\u4f46\u5c07\u7d93\u6fdf\u5206\u6790\u7684\u7126\u9ede\u5f9e\u751f\u7522\" - \u548c\u5e73\u7684\u4ee3\u50f9\uff1a\u8ca8\u5e63\u3001\u6c11\u4e3b\u8207\u51f1\u56e0\u65af\u7684\u4e00\u751f\uff0c\u7531 \u67e5\u514b\u91cc\uff0e\u5361\u7279, Zachary D. Carter, \u8cf4\u76c8\u6eff\u3002\n</code></pre>"},{"location":"qandi/#_4","title":"\u5fc3\u4e2d\u6c92\u6709\u9776\u5b50","text":"<pre><code>\u5fc3\u4e2d\u6c92\u6709\u9776\u5b50 \u5c31\u662f\n\u7121\u7684\u653e\u77e2\n\u4e0d\u77e5\u9053\u600e\u9ebc\u505a\u6642\n\u5c31\u9078\u6700\u56f0\u96e3\u7684\u8def \n\u624d\u662f\u901a\u5f80\u6210\u529f\u7684\u6377\u5f91\n</code></pre>"},{"location":"qandi/#_5","title":"\u5341\u6212\u9152\u533f\u540d\u6703\u7684\u5341\u4e8c\u6b65\u9a5f","text":"<pre><code>\u5341\u4e8c\u6b65\u9a5f\u7684\u767c\u5c55\n\u3000\u3000\u4e00\u4e5d\u4e09\u4e94\u81f3\u4e09\u4e03\u5e74\u9593\uff0c\u70ba\u4e86\u5e6b\u52a9\u66f4\u591a\u9152\u766e\u8005\u56de\u5fa9\u6e05\u9192\u7684\u795e\u667a\uff0c\n\u53f2\u5bc6\u65af\u548c\u5a01\u723e\u68ee\u5728\u7d10\u7d04\u53c3\u52a0\u4e86\u7531\u8212\u6885\u514b\u4e3b\u6301\u7684\u725b\u6d25\u5718\u9ad4\u805a\u6703\uff0c\n\u5a01\u723e\u68ee\u5728\u65e5\u5f8c\u56de\u61b6\u6642\u8868\u793a\uff1a\u300c\u5927\u90e8\u5206\u6212\u9152\u533f\u540d\u6703\u5341\u4e8c\u6b65\u9a5f\u7684\u60f3\u6cd5\u90fd\u662f\u5f9e\u5c71\u59c6\u2027\u8212\u6885\u514b\u8eab\u4e0a\u5438\u6536\u800c\u4f86\u7684\uff0c\n\u800c\u9019\u4e9b\u6b65\u9a5f\u6210\u70ba\u6212\u9152\u533f\u540d\u6703\u751f\u6d3b\u65b9\u5f0f\u7684\u6838\u5fc3\u3002\u65e9\u671f\u6212\u9152\u533f\u540d\u6703\u5f62\u6210\u4e86\u81ea\u5df1\u7684\u6982\u5ff5\uff0c\n\u5305\u62ec\u81ea\u6211\u6aa2\u8a0e\u3001\u627f\u8a8d\u6027\u683c\u4e2d\u7684\u7f3a\u9677\u3001\u5f4c\u88dc\u904e\u53bb\u9020\u6210\u7684\u50b7\u5bb3\uff0c\n\u4e26\u4e14\u53ea\u8207\u76f4\u63a5\u900f\u904e\u725b\u6d25\u5718\u9ad4\u4ee5\u53ca\u4ed6\u5011\u5728\u7f8e\u570b\u7684\u524d\u4efb\u9818\u5c0e\u8005\u8212\u6885\u514b\u6240\u5f15\u4ecb\u7684\u4eba\u4e00\u540c\u5de5\u4f5c\uff0c\n\u6c92\u6709\u4f86\u81ea\u5176\u4ed6\u5730\u65b9\u7684\u4eba\u3002\u300d\n\n\u6212\u9152\u533f\u540d\u6703\u7684\u5341\u4e8c\u6b65\u9a5f\n1. \u6211\u5011\u627f\u8a8d\u7121\u529b\u62b5\u6297\u624b\u6a5f\uff0c\u4ee5\u81f4\u751f\u6d3b\u8b8a\u5f97\u7121\u6cd5\u638c\u63a7\u3002\n2. \u958b\u59cb\u76f8\u4fe1\u6709\u6bd4\u6211\u5011\u81ea\u8eab\u66f4\u5f37\u5927\u7684\u529b\u91cf\uff0c\u8b93\u6211\u5011\u56de\u5fa9\u795e\u667a\u6e05\u9192\u3002\n3. \u505a\u51fa\u6c7a\u5b9a\uff0c\u5c07\u6211\u5011\u7684\u610f\u5fd7\u548c\u751f\u547d\u8a17\u4ed8\u7d66\u6211\u5011\u6240\u8a8d\u8b58\u7684\u795e\u4f86\u7167\u770b\u3002\n4. \u5fb9\u5e95\u800c\u7121\u61fc\u5730\u5217\u51fa\u6211\u5011\u81ea\u5df1\u5728\u9053\u5fb7\u4e0a\u7684\u512a\u52a3\u4e4b\u8655\u3002\n5. \u5c0d\u795e\u3001\u81ea\u5df1\u53ca\u6240\u6709\u4eba\u5766\u627f\u6211\u5011\u932f\u8aa4\u884c\u70ba\u7684\u771f\u6b63\u539f\u56e0\u3002\n6. \u505a\u597d\u842c\u5168\u7684\u6e96\u5099\uff0c\u4ee5\u4fbf\u8b93\u6211\u5011\u6240\u8a8d\u8b58\u7684\u795e\u6e05\u7406\u6027\u683c\u4e2d\u7684\u7f3a\u9677\u3002\n7. \u8b19\u5351\u5730\u61c7\u6c42\u6211\u5011\u6240\u8a8d\u8b58\u7684\u795e\u53bb\u9664\u6211\u5011\u7684\u7f3a\u9ede\u3002\n8. \u4e00\u4e00\u5217\u51fa\u6240\u6709\u6211\u5011\u66fe\u7d93\u50b7\u5bb3\u904e\u7684\u4eba\uff0c\u4e14\u9858\u610f\u5f4c\u88dc\u4ed6\u5011\u3002\n9. \u53ea\u8981\u6709\u53ef\u80fd\uff0c\u4fbf\u76f4\u63a5\u5f4c\u88dc\u66fe\u7d93\u50b7\u5bb3\u904e\u7684\u4eba\uff0c\u9664\u975e\u9019\u6a23\u505a\u6703\u5c0d\u4ed6\u5011\u6216\u5176\u4ed6\u4eba\u9020\u6210\u50b7\u5bb3\u3002\n10. \u7e7c\u7e8c\u5217\u51fa\u500b\u4eba\u7684\u9053\u5fb7\u512a\u52a3\u6240\u5728\uff0c\u4e14\u7576\u6211\u5011\u72af\u932f\u7684\u6642\u5019\uff0c\u99ac\u4e0a\u8a8d\u932f\u3002\n11. \u900f\u904e\u79b1\u544a\u8207\u6c89\u601d\u9ed8\u60f3\u63d0\u5347\u6211\u5011\u610f\u5411\u6e05\u660e\u5730\u8207\u6211\u5011\u6240\u8a8d\u8b58\u7684\u795e\u63a5\u89f8\uff0c\n    \u53ea\u7948\u6c42\u7942\u8cdc\u4e88\u6211\u5011\u77e5\u66c9\u7942\u7684\u65e8\u610f\u7684\u667a\u6167\u53ca\u5c07\u4e4b\u4ed8\u8af8\u5be6\u8e10\u7684\u80fd\u529b\u3002\n12. \u8cab\u5fb9\u9019\u4e9b\u6b65\u9a5f\u5f8c\uff0c\u6211\u5011\u7684\u9748\u6027\u56e0\u800c\u7526\u9192\uff0c\n    \u63a5\u8457\u6211\u5011\u8981\u8a66\u8457\u5c07\u9019\u6a23\u7684\u8a0a\u606f\u50b3\u9054\u7d66\u5176\u4ed6\u9152\u766e\u8005\uff0c\n    \u4e26\u5728\u65e5\u5e38\u751f\u6d3b\u4e00\u8209\u4e00\u52d5\u4e2d\u7686\u5be6\u8e10\u9019\u4e9b\u539f\u5247\u3002\n</code></pre>"},{"location":"qandi/#_6","title":"\u904e\u53bb\u6211\u4ee5\u70ba\u6a39\u780d\u4e0b\u4f86\u5c31\u6b7b\u4e86","text":"<pre><code>\u904e\u53bb\u6211\u4ee5\u70ba\u6a39\u780d\u4e0b\u4f86\u5c31\u6b7b\u4e86\n\u73fe\u5728 \u6211\u77e5\u9053\n\u6a39\u505a\u6210\u6a02\u5668 \u4ed6\u5c31\u80fd\u7e7c\u7e8c\u6d3b\u4e0b\u53bb\n\u4f0a\u6717\u67d0\u97f3\u6a02\u5bb6\n</code></pre>"},{"location":"qandi/#_7","title":"\u4e0a\u5e1d\u2014\u2014\u4ed6\u7684\u5fc3\u610f\u9014\u5f91","text":"<pre><code>\u4e0a\u5e1d\u2014\u2014\u4ed6\u7684\u5fc3\u610f\u9014\u5f91\n\u96e3\u4ee5\u627e\u5230\n\u7136\u800c\u5b83\u5728\u5e7d\u6697\u4e2d\u653e\u5149\u660e\n\u5728\u4eba\u985e\u751f\u547d\u9ed1\u6697\u7684\u6a5f\u904b\u88e1\u3002\n\u4e0d\u8cbb\u529b\u800c\u5b89\u8a73\n\u4ed6\u5b8c\u6210\u4ed6\u5b8c\u7f8e\u7684\u65e8\u610f\u3002\u201d\n</code></pre>"},{"location":"qandi/#i-walked-today-where-jesus-walks","title":"I walked today where Jesus walks","text":"<pre><code>I walked today where Jesus walks\n\u4eca\u5929\uff0c\u6211\u2f9b\u5728\u8036\u7a4c\u2f9b\u904e\u7684\u8def\u4e0a\nDown the crowded street\n\u4e0b\u5230\u64c1\u64e0\u7684\u8857\u9053\nWhere the children have no place to play\n\u90a3\u88e1\uff0c\u5b69\u7ae5\u7121\u8655\u53ef\u73a9\nWhere the homeless wait\n\u90a3\u88e1\uff0c\u6d41\u6d6a\u7684\u2f08\u7b49\u5f85\nFor life to take them in\n\u7b49\u5019\u5e36\u9818\u9032\u5165\u2f63\u547d\nYes, I walked with Jesus there today\n\u662f\u7684\uff0c\u6211\u8207\u8036\u7a4c\u2f9b\u5728\u90a3\u88e1\nI saw the Lord behind the eyes\n\u5728\u7121\u6578\u773c\u775b\u7684\u5f8c\u2faf\uff0c\u6211\u770b\u2f92\u4e86\u4e3b\nOf the broken men, And I felt His wounded hand reach out\n\u5728\u7834\u788e\u7684\u2f08\u2f3c\u80cc\u5f8c\uff0c\u6211\u611f\u89ba\u7942\u4f38\u51fa\u91d8\u75d5\u7684\u2f3f\nAnd as the careless traffic sped\n\u7576\u7121\u60c5\u7684\u2f9e\u8f1b\u6025\u99b3\u2f7d\u904e\nAlong the other side\n\u7368\u2f83\u5728\u8857\u9053\u53e6\u2f00\u908a\nI saw Jesus walk the streets today\n\u4eca\u5929\uff0c\u6211\u770b\u2f92\u8036\u7a4c\u2f9b\u5728\u8857\u4e0a\nWhere the least of all\n\u90a3\u88e1\u6700\u5351\u5fae\u7684\u2f08\nFind no place to turn\n\u7121\u5bb6\u53ef\u6b78\nAnd they fall without a name\n\u4ed6\u5011\u5012\u81e5\u8857\u982d\uff0c\u4f9d\u7136\u9ed8\u9ed8\u7121\u540d\nJesus walks with these\n\u8036\u7a4c\u8207\u4ed6\u5011\u540c\u2f8f\nThe hungry and the lost\n\u90a3\u4e9b\u98e2\u9913\u8207\u5931\u55aa\nOff\u2019ring water from a cup and bread\n\u737b\u4e0a\u676f\u2f54\u8207\u9eb5\u5305\nThe Bread of Life, the living Stream\n\u662f\u2f63\u547d\u7684\u7ce7\u8207\u6d3b\u2f54\nWhere teeming million cross\n\u90a3\u88e1\u5145\u6eff\u767e\u842c\u500b\u2f17\u5b57\u67b6\nI saw Jesus walk the streets today\n\u4eca\u5929\uff0c\u6211\u770b\u2f92\u8036\u7a4c\u2f9b\u5728\u8857\u4e0a\nWhere the least of all\n\u90a3\u88e1\u6700\u5351\u5fae\u7684\u2f08\nFind no place to turn\n\u7121\u5bb6\u53ef\u6b78\nTo find that God, yes, God Himself\n\u8981\u627e\u5230\u4e0a\u5e1d\uff0c\u662f\u7684\uff0c\u6d3b\u2f63\u2f63\u7684\u4e0a\u5e1d\nWalks there\n\u2f9b\u53bb\u90a3\u88e1\n</code></pre>"},{"location":"qandi/#_8","title":"\u7b2c\u6b50\u6839\u5c3c","text":"<p>\u7b2c\u6b50\u6839\u5c3c baidu</p> <p>\u7b2c\u6b50\u6839\u5c3c Wiki</p>"},{"location":"qandi/#_9","title":"\u5929\u884c\u5065 \u541b\u5b50\u7576\u81ea\u5f37\u4e0d\u606f","text":""},{"location":"qandi/#ideas","title":"Ideas","text":""},{"location":"qandi/#eeg-for-all-patients-to-monitor-their-moods","title":"EEG for all patients to monitor their moods","text":""},{"location":"qandi/#_10","title":"\u4e00\u500b\u7121\u6cd5\u63d0\u4f9b\u5efa\u8b70 \u89e3\u91cb\u7684\u9810\u6e2c \u6c92\u6709\u610f\u7fa9","text":""},{"location":"qandi/#language-to-action","title":"Language to Action","text":""},{"location":"qandi/#disable-peoples-keyboard-use-arithematic-coding-dasher","title":"Disable People's Keyboard use Arithematic Coding DASHER","text":""},{"location":"qandi/#the-rise-of-idiot-dawn-of-dark-age","title":"\u5e38\u8b58\u9769\u547d The Rise of Idiot , Dawn of Dark Age","text":""},{"location":"qandi/#language-is-a-thinking-tools-why-i-want-to-subcontract-to-others","title":"language is a thinking tools why i want to subcontract to others?","text":""},{"location":"qandi/#human-consume-information-information-is-like-food-to-us","title":"Human consume information, Information is like food to us","text":""},{"location":"qandi/#_11","title":"\u5982\u679c\u601d\u8003\u9700\u8981\u8a9e\u8a00 \u90a3\u9ebc\u9748\u611f\u662f\u751a\u9ebc\uff1f \u5716\u50cf\u601d\u8003\u662f\u751a\u9ebc\uff1f","text":""},{"location":"qandi/#concision-thinking-is-hard-not-very-one-live-consciously","title":"Concision thinking is hard. Not very one live consciously","text":""},{"location":"qandi/#customer-first-design","title":"Customer first design","text":"<pre><code>Talk about pain point, not solutions.\n</code></pre>"},{"location":"qandi/#_12","title":"\u6211\u5011\u7684\u9650\u5236\u4f86\u81ea\u65bc\u6211\u5011\u7684\u5de5\u5177 \u5de5\u5177 \u9650\u5236 \u6211\u5011\u7684\u60f3\u50cf\u529b","text":""},{"location":"qandi/#_13","title":"\u4eba\u5011\u4e0d\u518d\u76f8\u4fe1\u4f86\u751f\u6642","text":"<pre><code>\u4eba\u5011\u4e0d\u518d\u76f8\u4fe1\u4f86\u751f\u6642\uff0c\u4f60\u5f97\u5728\u9019\u4e00\u751f\u80fd\u505a\u591a\u5c11\u662f\u591a\u5c11\u3002\n\u6b64\u5916\uff0c\u7576\u4eba\u5011\u958b\u59cb\u76f8\u4fe1\u9032\u6b65\u89c0\uff0c\u8a8d\u70ba\u6b77\u53f2\u671d\u8457\u66f4\u5b8c\u7f8e\u7684\u672a\u4f86\u524d\u9032\uff0c\n\u4ed6\u5011\u66f4\u6df1\u523b\u5730\u611f\u53d7\u5230\u58fd\u547d\u77ed\u66ab\u5e36\u4f86\u7684\u75db\u82e6\uff0c\n\u800c\u81ea\u5df1\u6ce8\u5b9a\u8981\u932f\u904e\u90a3\u6a23\u7f8e\u597d\u7684\u672a\u4f86\uff0c\u5e7e\u4e4e\u4eab\u53d7\u4e0d\u5230\u3002\n\u65bc\u662f\u4ed6\u5011\u5728\u751f\u547d\u4e2d\u585e\u9032\u4e94\u82b1\u516b\u9580\u7684\u9ad4\u9a57\uff0c\n\u8a66\u5716\u5e73\u606f\u90a3\u6a23\u7684\u7126\u616e\n</code></pre>"},{"location":"qandi/#learn-note-just","title":"learn note just","text":"<pre><code>learn not just\nwhat it is\nbut also\nwhat it is not\n</code></pre>"},{"location":"qandi/#intelligent-is-man-handle-surprise-in-an-intelligent-way","title":"intelligent is man handle surprise in an intelligent way","text":""},{"location":"qandi/#qsis","title":"QSIS \u5730\u9707","text":"<p>QSIS Web Site</p>"},{"location":"qandi/#life-create-boundary","title":"Life create boundary","text":"<pre><code>Let the university unable to see\nIt is not saying inside the cell physics not apply.\nIt is saying the condition is different\nBoundary is created \nLike black hole\n</code></pre>"},{"location":"qandi/#detect-vibration-pattern-from-the-road","title":"Detect vibration pattern from the road","text":""},{"location":"qandi/#_14","title":"\u9b5a\u982d\u4eba","text":"<pre><code>\u9b5a\u982d\u4eba\n\u8eab\u4e0a\u9577\u51fa\u5c0f\u82bd \u8b8a\u6210\u5c0f\u9b5a\n\u5176\u4e2d\u4e00\u96bb\u5c0f\u9b5a \u9032\u5165\u4eba\u985e\u5b50\u5bae\n\u51fa\u751f\u70ba\u9b5a\u982d\u4eba\n\u9b5a\u982d\u4eba\u541e\u4e0b\u6240\u6709\u7684\u5c0f\u9b5a \n\u5c0f\u9b5a\u6e38\u5230\u9b5a\u982d\u4eba\u7684\u982d\u5167 \u7e7c\u7e8c\u751f\u6d3b\n\u5c0f\u9b5a\u7e7c\u627f\u524d\u9b5a\u982d\u4eba\u7684\u667a\u6167\n</code></pre>"},{"location":"qandi/#idea","title":"\u4eba\u985e\u7684\u5927\u8166\u5efa\u69cb\u4e00\u500b\u6211\u5011\u9858\u610f\u70ba\u5b83\u72a7\u7272\u751f\u547d\u7684Idea","text":""},{"location":"qandi/#_15","title":"\u6d3b\u5728\u7576\u4e0b \u5c31\u662f\u5be6\u8e10\u81ea\u6211","text":""},{"location":"qandi/#our-world-view-is-model-by-our-creations","title":"Our world view is model by our creations.","text":""},{"location":"qandi/#_16","title":"\u4e0d\u9700\u8981\u8a66\u5716\u8aaa\u670d\u5225\u4eba \u9806\u8457\u5225\u4eba\u7684\u53e3\u6c23\u5427@@","text":""},{"location":"qandi/#_17","title":"\u6e34\u671b\u5c0b\u627e\u6642 \u5bb9\u6613\u9677\u5165\u9677\u9631","text":""},{"location":"qandi/#_18","title":"\u7c98\u83cc\u4f7f\u7528\u81ea\u5df1\u7559\u4e0b\u7684\u75d5\u8de1\u7576\u6210\u8a18\u61b6","text":""},{"location":"qandi/#company-can-only-claim-dominance","title":"company can only claim dominance","text":"<pre><code>History has shown us \nthat one company can only claim dominance \nover that technology for so long \u2014 \nand the bigger it gets, \nthe more energy it takes to maintain it.\n</code></pre>"},{"location":"qandi/#find-the-essential-information-is-a-computation","title":"Find the essential information is a computation","text":""},{"location":"qandi/#_19","title":"\u70ba\u4f55\u4e0d\u7acb\u523b\u8cb7 \u964d\u4f4e\u591a\u5df4\u80fa","text":""},{"location":"qandi/#_20","title":"\u7121\u77e5 \u4e0d\u5bec\u5bb9","text":""},{"location":"qandi/#we-cannot-teach-child-differential-equations-even-it-has-the-same-brain-after-30-years","title":"We cannot teach child differential equations even it has the same brain  after 30 years","text":""},{"location":"qandi/#boring-is-good","title":"Boring is Good","text":"<pre><code>Boring is Good\nLet people found their own joy\nCreative joy is more satisfy then given joy.\n</code></pre>"},{"location":"qandi/#_21","title":"\u53f0\u8a9e","text":"<pre><code>\u5927\u8de4 \u5927\u89d2\n\u4ead\u4ed4\u8de4 \u9a0e\u6a13\n\u9010\u5de5 \u6bcf\u5929\n\u4e0b\u6661 \u4e0b\u5348\n\u4e00\u5be1 \u4e00\u4e9b\n\u9aa8\u529b \u52aa\u529b \u8a8d\u771f\n\u84cb\u6fdf \u5f88\u591a\n\u95a3\u4f86 \u518d\u4f86\n\u611b\u95a3 \u9700\u8981\n\n\u8db3\u5c11 \u5f88\u5c11\n\u5c1a\u91cd\u8981 \u5f88\u91cd\u8981\n\u611b\u53bb \u8981\u53bb\n\u5565\u7269\u8ca8 \u4ec0\u9ebc\u6771\u897f \u4ec0\u9ebc\n\u6703\u4f7f \u53ef\u4ee5\n\u54b1\u9019\u99ac \u73fe\u5728\n\u7db4 \u5c0d\n\u9b25\u76f8\u5171 \u4e00\u8d77\u5e6b\u5fd9\n\u7121\u5565\u7269\u8ca8 \u6c92\u6709\u4ec0\u9ebc\n\u611f\u89ba\u8b1b \u611f\u89ba\u4e0a \u611f\u89ba\u5230\n\u7dca \u5feb\n\u5f7c\u6e96 \u90a3\u6642\n\u9019\u99ac \u73fe\u5728\n\n\u5de5\u8ab2 \u5de5\u4f5c\n\u8f49\u4f86 \u56de\u4f86\n\n\u53f8\u5976 \u6492\u5b0c\n\n\u4e8c\u64fa \u4e8c\u6b21\n\u978b\u4ed4 \u978b\u5b50\n\n\u5477\u8165\u9a37  \u5403\u597d\u6599\n\u63a0\u72c2 \u6293\u72c2\n\u4e88\u4eba \u7d66\u4eba\n\u5201\u5de5 \u6545\u610f\n\n\u96c4\u96c4 \u5ffd\u7136\n\u5f8c\u58c1 \u5f8c\u9762\n\u64cb\u4ed4 \u715e\u8eca\n\n\u6d77\u5898\u4ed4 \u6d77\u908a\n\u8d81 \u8cfa\n\u4e0a\u5927 \u6700\u5927\n\n\u66f2\u53bb \u6b7b\u53bb\n\u6c93\u6c93\u4ed4 \u6162\u6162\u7684\n\n\u9b25\u76f8\u5171  \u4e92\u76f8\u5e6b\u5fd9\n\u62c4\u8457  \u9047\u5230\n\n\u62cd\u62fc \u6253\u62fc\n</code></pre>"},{"location":"qandi/#_22","title":"\u919c\u5c0f\u9d28\u5275\u696d\u6295\u8cc7\u9867\u554f\u516c\u53f8","text":"<pre><code>\u5275\u696d\u8005\u90fd\u5e0c\u671b\u5728\u521d\u671f\u5c31\u80fd\u5920\u7372\u5f97\u8cc7\u91d1\u7684\u6339\u6ce8\n\u7136\u800c\u5275\u696d\u6295\u8cc7\u4eba\u5728\u4e00\u7247\u5275\u696d\u5bb6\u4e4b\u4e2d \n\u5982\u4f55\u6311\u9078\u51fa\u6703\u8b8a\u5929\u9d5d\u7684\u919c\u5c0f\u9d28\u5462\n\uff08\u81f3\u65bc \u7368\u89d2\u7378 \u6211\u6c92\u6709\u8208\u8da3 \u56e0\u70ba\u90a3\u662f\u795e\u8a71\u4e2d\u7684\u6771\u897f\uff09\n\u5728\u6211\u500b\u4eba\u7684\u5de5\u4f5c\u7d93\u9a57\u4e2d\n\u919c\u5c0f\u9d28\u6709\u6c92\u6709\u5929\u9d5d\u57fa\u56e0\u662f\u6709\u65b9\u6cd5\u53ef\u4ee5\u4f9d\u5faa\u7684\n\u80af\u5b9a\u4e0d\u662f\u900f\u904e\u6240\u8b02\u7684\u6bd4\u8cfd\u4e86\n</code></pre>"},{"location":"qandi/#brain-generate-image-and-sound","title":"Brain generate image and sound","text":"<pre><code>Brain generate image and sound to evoke us taking actions\nWhy take these actions ?\n</code></pre>"},{"location":"qandi/#_23","title":"\u4f86\u81ea\u65b0\u7af9\u7684\u6240\u8b02\u9ad8\u77e5\u8b58\u4efd\u5b50\u90fd\u9019\u6a23\u55ce\uff1f","text":"<pre><code>\u6700\u8fd1\u5de5\u4f5c\u4e0a\u9047\u5230\u4e09\u500b\u4f86\u81ea\u65b0\u7af9\u79d1\u5b78\u5712\u5340\u7684 \u201c\u8cc7\u6df1\u5de5\u7a0b\u5e2b\u201d \n\u525b\u958b\u59cb\u89ba\u5f97\u597d\u50cf\u5f88\u53b2\u5bb3 \u4e00\u9663\u5b50\u4ea4\u4e0d\u51fa\u6771\u897f\u4e4b\u5f8c \u5c31\u958b\u59cb\u627e\u7406\u7531 \n\u4e5f\u89ba\u5f97\u597d\u50cf\u67d0\u4e9b\u539f\u56e0\u4e5f\u662f\u6c92\u932f \u53ea\u662f\u7e3d\u662f\u8981\u60f3\u8fa6\u6cd5 \n\u554f\u984c\u662f\u4ed6\u5011\u4e5f\u4e0d\u6253\u7b97\u6539\u8b8a\u7b56\u7565\u6216\u662f\u8a2d\u8a08 \u7136\u5f8c\u5c31\u662f\u4e00\u7a2e\u614b\u5ea6  \n\u201c\u6211\u90fd\u6c92\u932f \u90fd\u662f\u5225\u4eba\u9020\u6210\u7684\u201d \n\u7136\u5f8c\u554f\u4ed6\u5c31\u662f\u4e00\u76f4\u62ff\u4e00\u6a23\u7684\u7406\u7531\u51fa\u4f86\u76e7 \n\u6211\u73fe\u5728\u7684\u60f3\u6cd5\u662f \n\u4f86\u81ea\u65b0\u7af9\u7684\u6240\u8b02\u9ad8\u77e5\u8b58\u4efd\u5b50\u90fd\u9019\u6a23\u55ce\uff1f\n</code></pre>"},{"location":"resources/","title":"Resources","text":""},{"location":"resources/#tools-to-solve-complex-engineering-problem","title":"Tools to Solve Complex Engineering Problem","text":"<ol> <li>Clean Code / Gaphics</li> <li>Mob Programming</li> <li>Git / Github</li> <li>Modulization / Standard Connector</li> </ol>"},{"location":"resources/#software-engineering","title":"Software Engineering","text":""},{"location":"resources/#mob-programming","title":"Mob Programming","text":"<p>Mob Programming woodyzuill.com.</p> <p>Mob Programming Example Youtube Video.</p>"},{"location":"resources/#agile-firmware-and-hardware-design","title":"Agile Firmware and Hardware Design","text":"<p>Youtube Video</p>"},{"location":"resources/#embedded-system","title":"Embedded System","text":""},{"location":"resources/#design-circuit-boards-with-code","title":"Design circuit boards with code","text":"<pre><code>Design circuit boards with code! \n\u2728 Get software-like design reuse \ud83d\ude80, \nvalidation, version control and \ncollaboration in hardware; \nstarting with electronics \u26a1\ufe0f\n</code></pre> <p>Design circuit boards with code!</p>"},{"location":"resources/#no-rtos","title":"No RTOS","text":"<p>ANTIRTOS</p>"},{"location":"resources/#yes-rtos","title":"Yes RTOS","text":"<ol> <li>FreeRTOS</li> <li>Zephyr</li> <li>RT-Thread</li> </ol>"},{"location":"resources/#pico-images","title":"PICO Images","text":"<p>Debug Probe debug probe download</p> <p>Nuke Flash Nuke All download</p>"},{"location":"resources/#bead-usage","title":"Bead Usage","text":"<p>errite-beads-common-applications-and-considerations</p>"},{"location":"resources/#fast-serial-io-serdes-lvds","title":"Fast Serial IO Serdes-LVDS","text":"<p>Fast Serial IO</p>"},{"location":"resources/#high-speed-pcb-design","title":"High Speed PCB Design","text":"<p>High Speed PCB Design</p>"},{"location":"resources/#fpga","title":"FPGA","text":""},{"location":"resources/#generates-makefiles-for-fpga-eda","title":"Generates Makefiles for FPGA EDA","text":"<p>Generates Makefiles for FPGA EDA</p>"},{"location":"resources/#riffa","title":"Riffa","text":"<p>RIFFA_A_Reusable_Integration_Framework_for_FPGA_Accelerators</p> <p>https://kastner.ucsd.edu/wp-content/uploads/2014/04/admin/fpl-riffa2.pdf</p> <p>https://github.com/KastnerRG/riffa</p> <p>Riffa AXI in OpenCore</p> <p>Some Riffa User</p> <p>Riffa as Vivado IP</p>"},{"location":"resources/#xdma","title":"XDMA","text":"<p>Xilinx XDMA</p>"},{"location":"resources/#syzygy-interface","title":"SYZYGY Interface","text":"<p>SYZYGY Interface md</p>"},{"location":"resources/#hls","title":"HLS","text":"<p>https://www.acri.c.titech.ac.jp/wordpress/</p> <p>https://github.com/acri-room/hls-challenge-labs</p> <p>https://acri-vhls-challenge.web.app/</p>"},{"location":"resources/#manta-a-configurable-and-approachable-tool-for-fpga-debugging-and-rapid-prototyping","title":"Manta: A Configurable and Approachable Tool for FPGA Debugging and Rapid Prototyping","text":"<p>https://fischermoseley.github.io/manta/</p>"},{"location":"resources/#ddr3-memory","title":"DDR3 Memory","text":""},{"location":"resources/#7-series-compare","title":"7 Series Compare","text":"<p>7 Series Compare</p>"},{"location":"resources/#valid-ready-handshake-use-verilog","title":"Valid Ready Handshake use Verilog","text":"<p>Valid-Ready Handshake</p>"},{"location":"resources/#usb3-daq","title":"USB3 DAQ","text":""},{"location":"resources/#usb3-fifo-interface-for-daq-use-ft60x-and-cypress-fx3","title":"USB3 FIFO Interface for DAQ use FT60X and Cypress FX3","text":"<p>USB3 FIFO Interface for DAQ</p>"},{"location":"resources/#korean-blog-about-ft601","title":"Korean Blog about FT601","text":"<p>Korean Blog about FT601</p>"},{"location":"resources/#onix","title":"ONIX","text":"<p>Open Ephys: Onix</p>"},{"location":"resources/#daq","title":"DAQ","text":""},{"location":"resources/#intan","title":"Intan","text":"<p>RHX Impedence Measure</p>"},{"location":"resources/#use-hdmi-video-capture-as-data-input","title":"Use hdmi video capture as data input","text":"<p>HDMI Output as Data to PC</p>"},{"location":"resources/#a-2-ghz-oscilloscope-for-everyone","title":"A 2 GHz oscilloscope for everyone","text":"<p>https://www.crowdsupply.com/andy-haas/haasoscope-pro</p> <p>https://github.com/drandyhaas/HaasoscopePro</p>"},{"location":"resources/#daq-sync","title":"DAQ Sync","text":"<p>data-acquisition-synchronisation</p>"},{"location":"resources/#wireless-headstages","title":"Wireless Headstages","text":"<p>Wireless Headstage</p>"},{"location":"resources/#math","title":"Math","text":""},{"location":"resources/#probabilistic-numerics","title":"Probabilistic numerics","text":"<p>Probabilistic numerics</p> <p>https://www.probabilistic-numerics.org/</p>"},{"location":"resources/#jp-books-site","title":"JP Books Site","text":"<p>https://gihyo.jp/dp</p> <p>https://honto.jp/</p> <p>https://cc.cqpub.co.jp/lib/</p>"},{"location":"schematics/","title":"Schematics","text":""},{"location":"schematics/#fpga","title":"FPGA","text":""},{"location":"schematics/#fpga-daisy-chain-jtag","title":"FPGA Daisy Chain JTAG","text":""},{"location":"schematics/#ftdi","title":"FTDI","text":""},{"location":"schematics/#usb2-ft2232","title":"USB2 FT2232","text":"<p>ftdi-asynchronous-fifo-usb-communication-with-fpga</p> <p>FT245 FIFO Design</p> <p></p> <p></p>"},{"location":"schematics/#usb3-ft60x-schematics","title":"USB3 FT60X Schematics","text":""},{"location":"schematics/#lattice","title":"Lattice","text":""},{"location":"schematics/#icestick-1k","title":"ICEStick 1K","text":"<p>ICEStick 1K IO and Platform Define for Litex icestick1Kio.md</p>"},{"location":"schematics/#crosslink-nx-usb3","title":"CrossLink-NX USB3","text":"<p>USB3 Support CrossLinkU-NX</p> <p>Lattice CrossLink-NX</p> <p>tinyCLUNX33 Kit</p>"},{"location":"schematics/#pico-ice40","title":"PICO + ICE40","text":"<p>pico-ice RP2040 plus Lattice iCE40UP5K FPGA</p> <p>https://github.com/tinyvision-ai-inc/pico-ice-sdk/</p>"},{"location":"schematics/#pico-wave-gen","title":"PICO Wave Gen","text":"<p>PICO Wave Gen</p>"},{"location":"schematics/#open-ephys","title":"Open Ephys","text":""},{"location":"schematics/#onix-schematics","title":"ONIX Schematics","text":"<p>Open Ephys FMC-Host fmc-host_schematic.pdf</p> <p>Open Ephys Breakout Board breakout_schematic.pdf</p>"},{"location":"schematics/#sparkfun","title":"Sparkfun","text":""},{"location":"schematics/#micromod","title":"MicroMod","text":"<p>Sprkfun MicroMod_ATP_Carrier_Board_Schematic.pdf</p>"},{"location":"templates/","title":"Templates for Spec or Docs","text":"<p>Firmware Specification</p> <p>Board Specification</p> <p>App Specification</p> <p>Software Doc</p>"},{"location":"tutorial/","title":"Tutorial","text":""},{"location":"tutorial/#litex","title":"Litex","text":"<p>fjullien migen_litex_tutorials &lt;-- Best Litex tutorial</p> <p>officail litx wiki.</p> <p>Litex MIPI CSI</p> <p>ICEStorm Install icestorm_install.md</p> <p>getting-started-with-litex</p>"},{"location":"tutorial/#chisel-fpga","title":"Chisel FPGA\u958b\u767a\u65e5\u8a18","text":"<p>https://msyksphinz.hatenablog.com/</p> <p>https://www.hatena.ne.jp/</p> <p>https://hatenablog.com/</p> <p>Agile Hardware Design Video 2024</p> <p></p> <p>Chip Alliance</p>"},{"location":"tutorial/#amaranth","title":"Amaranth","text":"<p>Amaranth HDL Document</p>"},{"location":"tutorial/#verilog","title":"Verilog","text":"<p>https://verilogguide.readthedocs.io/en/latest/</p> <p>https://www.chipverify.com/</p>"},{"location":"tutorial/#the-art-of-fpga-design-element14-community","title":"The Art of FPGA Design - element14 Community","text":"<p>The Art of FPGA Design - element14 Community</p>"},{"location":"tutorial/#digital-signal-processing-from-algorithm-to-fpga-bitstream-element14-community","title":"Digital Signal Processing, from Algorithm to FPGA Bitstream - element14 Community","text":"<p>Digital Signal Processing, from Algorithm to FPGA Bitstream</p>"},{"location":"tutorial/#linux-and-programming","title":"Linux and Programming","text":""},{"location":"tutorial/#linux-thread","title":"Linux Thread","text":"<p>Linux\u3068pthreads\u306b\u3088\u308b \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\uff5c\u30b5\u30dd\u30fc\u30c8\uff5c\u79c0\u548c\u30b7\u30b9\u30c6\u30e0 Book Link</p>"},{"location":"tutorial/#linux-kernel-module-programming-guide","title":"Linux Kernel Module Programming Guide","text":"<p>https://sysprog21.github.io/lkmpg/</p> <p>Tutorial 1 https://linux-kernel-labs.github.io/refs/heads/master/#</p>"},{"location":"tutorial/#ssh-turnnel","title":"SSH Turnnel","text":"<pre><code>ssh -f -N -L 127.0.0.1:8888:127.0.0.1:8888 -i pemKey  user@ipaddress\nFor Jupyter notebook\n</code></pre>"},{"location":"tutorial/#pico","title":"PICO","text":""},{"location":"tutorial/#pico-pio-programming","title":"PICO PIO Programming","text":"<p>PICO PIO Programming Youtube Video</p> <p>PICO PIO Programming Youtube Video Github Code</p> <p>Web Reference :</p> <p>PICO PIO url</p> <p>A Practical Look at PIO on the Raspberry Pi Pico URL</p> <p>Introduction to the PIO (Programmable Input Output) of the RP2040</p> <p>programmable-io-programming @ circuitcellar URL</p>"},{"location":"tutorial/#rp2040-pico-dma","title":"RP2040 PICO DMA","text":"<p>RP2040 PICO DMA</p> <p>RP2040 PICO DAC DMA</p>"},{"location":"tutorial/#rp2040-lvgl","title":"RP2040 LVGL","text":"<p>http://bbs.eeworld.com.cn/thread-1227666-1-1.html</p> <p>RT-Thread and LVGL</p>"},{"location":"tutorial/#python","title":"Python","text":""},{"location":"tutorial/#pyserial","title":"PySerial","text":"<p>PySerial Example Code pyserial_sample.md</p>"},{"location":"tutorial/#python-ftdi-for-spi","title":"Python FTDI for SPI","text":"<p>Python FTDI for SPI</p> <pre><code>from pyftdi.ftdi import Ftdi\nFtdi.show_devices()\nfrom pyftdi.spi import SpiController\n\nspi.configure('ftdi://ftdi:2232h:1:7b/1')\nslave = spi.get_port(cs=1, freq=10E6, mode=2)\nwrite_buf = b'\\x01\\x02\\x03'\nread_buf = slave.exchange(write_buf, duplex=True)\n</code></pre>"},{"location":"tutorial/#virtual-enviroment","title":"Virtual Enviroment","text":"<pre><code>python3 -m venv virtkv\nsource ./virtkv/bin/activate\n</code></pre> <p>Pyenv</p> <p>Other Solution https://python-poetry.org/</p>"},{"location":"tutorial/#micropython","title":"Micropython","text":""},{"location":"tutorial/#micropython-pyboard-dac-use-dma","title":"Micropython pyBoard DAC use DMA","text":"<pre><code>import math\nfrom array import array\nfrom pyb import DAC\n\n# create a buffer containing a sine-wave, using half-word samples\nbuf = array('H', 2048 + int(2047 * math.sin(2 * math.pi * i / 128)) for i in range(128))\n\n# output the sine-wave at 400Hz\ndac = DAC(1, bits=12)\ndac.write_timed(buf, 400 * len(buf), mode=DAC.CIRCULAR)\n</code></pre>"},{"location":"tutorial/#chromebook","title":"Chromebook","text":"<p>Install Desktop GUI in chromebook chromebookDesktop.md</p>"},{"location":"tutorial/#dsp","title":"DSP","text":""},{"location":"tutorial/#wavelet","title":"Wavelet","text":"<p>Wavelet_101</p>"},{"location":"tutorial/#neuro-science","title":"Neuro Science","text":"<p>Neuroscience exploration Video</p> <p>Topological Data Analysis (TDA)</p>"},{"location":"tutorial/#vscode","title":"VSCode","text":"<p>VSCode and Docker</p>"},{"location":"Y2025/Y2025-01/","title":"2025-01","text":""},{"location":"Y2025/Y2025-01/#2025-01-24","title":"2025-01-24","text":""},{"location":"Y2025/Y2025-01/#openbehavior","title":"openbehavior","text":"<p>openbehavior url</p> <p>The Future is Open Source Tools Paper pdf</p>"},{"location":"Y2025/Y2025-01/#ddr3-memory","title":"DDR3 Memory","text":""},{"location":"Y2025/Y2025-01/#pcie-ref-clock-inpout-to-fpga","title":"PCIE Ref Clock Inpout to FPGA","text":"<p>Xilixn URL</p>"},{"location":"Y2025/Y2025-01/#2025-01-22","title":"2025-01-22","text":""},{"location":"Y2025/Y2025-01/#pentium-cpu","title":"Pentium CPU","text":"<p>Pentium, reverse-engineered</p>"},{"location":"Y2025/Y2025-01/#wavelet","title":"Wavelet","text":"<p>Wavelet_101</p>"},{"location":"Y2025/Y2025-01/#2025-01-21","title":"2025-01-21","text":"<p>\u6676\u7247\u6280\u8853\u5927\u7a81\u7834\uff01Cerebras \u5982\u4f55\u5be6\u73fe\u6bd4\u4e00\u822c\u6676\u7247\u591a 100 \u500d\u7684\u7f3a\u9677\u5bb9\u5fcd\u5ea6\uff1f | T\u5ba2\u90a6 </p>"},{"location":"Y2025/Y2025-01/#dma-streaming-dma-and-coherent-dma","title":"DMA : Streaming DMA and Coherent DMA","text":""},{"location":"Y2025/Y2025-01/#verseai","title":"Verse.ai","text":"<p>Verse.ai</p> <p></p>"},{"location":"Y2025/Y2025-01/#mkv-file-format","title":"MKV File Format","text":"<p>MKV File Format</p>"},{"location":"Y2025/Y2025-01/#pi-camera-high-frame-rate","title":"Pi Camera High Frame Rate","text":"<p>Pi Camera High Frame Rate</p> <p>How To Record Video At 660 FPS On A $6 Raspberry Pi Camera - Part 1</p> <p>How To Record Video At 660 FPS On A $6 Raspberry Pi Camera - Part 2</p>"},{"location":"Y2025/Y2025-01/#2025-01-20","title":"2025-01-20","text":""},{"location":"Y2025/Y2025-01/#intan-adc-missing-code-and-missing-decison-level","title":"Intan ADC Missing Code and Missing Decison Level","text":"<p>Intan ADC Missing Code and Missing Decison Level</p> <p>Fix SARADC Issues</p> <p>Missing Decision Level </p> <p>Missing Code </p> <p>Before Software Calibration </p> <p>After Software Calibration </p>"},{"location":"Y2025/Y2025-01/#scalogram","title":"Scalogram","text":"<p>What is Scalogram</p> <p>spkit.github.io wavelet analysis</p> <p></p>"},{"location":"Y2025/Y2025-01/#2025-01-16","title":"2025-01-16","text":""},{"location":"Y2025/Y2025-01/#a-2-ghz-oscilloscope-for-everyone","title":"A 2 GHz oscilloscope for everyone","text":"<p>https://www.crowdsupply.com/andy-haas/haasoscope-pro</p> <p>https://github.com/drandyhaas/HaasoscopePro</p>"},{"location":"Y2025/Y2025-01/#syzygy-interface","title":"SYZYGY Interface","text":"<p>SYZYGY Interface syzygyfpga.io</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Y2025/Y2025-01/#paper-reading-2025-01-16","title":"Paper Reading 2025-01-16","text":"<p>Open_Ephys_electroencephalography_Open_Ephys_EEG_A_modular_low-cost_open-source_solution_to_human_neural_recording Paper Link</p> <p>Wearable_EEG_electronics_for_a_Brain-AI_Closed-Loop_System_to_enhance_autonomous_machine_decision-making Paper Link</p>"},{"location":"Y2025/Y2025-01/#pyftdi-for-intan","title":"PyFTDI for Intan","text":"<p>FT2232_SPI_Intan</p>"},{"location":"Y2025/Y2025-01/#2025-01-13","title":"2025-01-13","text":""},{"location":"Y2025/Y2025-01/#evolutionary-neural-coding-lab","title":"Evolutionary Neural Coding Lab","text":"<p>Github EvolutionaryNeuralCodingLab</p> <p>Site EvolutionaryNeuralCodingLab</p>"},{"location":"Y2025/Y2025-01/#paper-reading-2025-01-13","title":"Paper Reading 2025-01-13","text":"<p>ReptiLearn: An automated home cage system for behavioral experiments in reptiles without human intervention Paper Link</p>"},{"location":"Y2025/Y2025-01/#2025-01-03","title":"2025-01-03","text":""},{"location":"Y2025/Y2025-01/#lvds-clock-distribution","title":"LVDS Clock Distribution","text":"<p>Analog Device AN-1177</p> <p></p>"},{"location":"Y2025/Y2025-01/#2025-01-02","title":"2025-01-02","text":""},{"location":"Y2025/Y2025-01/#python-ftdi-for-spi","title":"Python FTDI for SPI","text":"<p>Python FTDI for SPI</p> <pre><code>from pyftdi.ftdi import Ftdi\nFtdi.show_devices()\nfrom pyftdi.spi import SpiController\n\nspi.configure('ftdi://ftdi:2232h:1:7b/1')\nslave = spi.get_port(cs=1, freq=10E6, mode=2)\nwrite_buf = b'\\x01\\x02\\x03'\nread_buf = slave.exchange(write_buf, duplex=True)\n</code></pre>"},{"location":"Y2025/Y2025-02/","title":"2025-02","text":""},{"location":"Y2025/Y2025-02/#2025-02-14","title":"2025-02-14","text":""},{"location":"Y2025/Y2025-02/#micropython-pyboard-dac-use-dma","title":"Micropython pyBoard DAC use DMA","text":"<pre><code>import math\nfrom array import array\nfrom pyb import DAC\n\n# create a buffer containing a sine-wave, using half-word samples\nbuf = array('H', 2048 + int(2047 * math.sin(2 * math.pi * i / 128)) for i in range(128))\n\n# output the sine-wave at 400Hz\ndac = DAC(1, bits=12)\ndac.write_timed(buf, 400 * len(buf), mode=DAC.CIRCULAR)\n</code></pre>"},{"location":"Y2025/Y2025-02/#any-maze","title":"Any-Maze","text":"<p> any-maze</p>"},{"location":"Y2025/Y2025-02/#fpga-and-usb3","title":"FPGA and USB3","text":""},{"location":"Y2025/Y2025-02/#ft602-for-uvc","title":"FT602 for UVC","text":"<p>FT602</p> <pre><code>FT602\u662fSuperSpeed USB\uff08USB 3.1 Gen 1\uff09\u5230FIFO\u63a5\u53e3\u7684USB\u89c6\u9891\u7c7b\uff08UVC\uff09\u6865\u63a5\u82af\u7247\uff0c\u652f\u6301\u6765\u81ea\u9ad8\u5206\u8fa8\u7387\u6444\u50cf\u673a\u8bbe\u5907\u7684\u89c6\u9891\u5185\u5bb9\u6d41\u3002\u53ef\u4ee5\u83b7\u5f97\u663e\u7740\u63d0\u9ad8\u7684\u89c6\u9891\u8d28\u91cf\uff0c\u5e76\u4e14\u4ee560\u5e27\u901f\u7387\u8fd0\u884c\u3002\n\n\u901a\u8fc7\u6807\u51c6\u7684\u652f\u6301UVC\u7684\u786c\u4ef6\u548c\u5e38\u7528\u7684\u5a92\u4f53\u64ad\u653e\u5668\u5e73\u53f0\uff08\u5982VLC Player\uff09\u67e5\u770b\u6355\u83b7\u7684\u56fe\u50cf\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u4f7f\u6539\u8fdb\u7684\u6027\u80fd\u53d7\u76ca\u532a\u6d45\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u66f4\u5927\u7684\u4fbf\u5229\u6027 - \u4ee5\u6700\u5c11\u7684\u6295\u8d44\u6765\u5347\u7ea7\u73b0\u6709\u7684\u7cfb\u7edf\uff0c\u6216\u4ece\u96f6\u5f00\u59cb\u8bbe\u8ba1\u548c\u90e8\u7f72\u65b0\u7684\u7cfb\u7edf\u3002 \u4e0d\u9700\u8981\u5b9a\u5236\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ece\u800c\u5141\u8bb8\u7b80\u5355\u7684\u5373\u63d2\u5373\u7528\u5b9e\u73b0\u3002\n\nFT602\u7cfb\u5217\u8865\u5145\u4e86FTDI\u82af\u7247\u73b0\u6709\u7684 FT60x \u7cfb\u5217 \u7ed3\u5408FT600\u548cFT601 \u82af\u7247\uff0c\u4e3a\u5f00\u53d1\u5de5\u7a0b\u5e08\u63d0\u4f9b\u4e1a\u754c\u6700\u5168\u9762\u7684USB 3.0\u4ea7\u54c1\u7ec4\u5408\u3002 \u8fd9\u4e9b\u8bbe\u5907\u80fd\u591f\u63d0\u4f9bUSB 3.0 \u8d85\u9ad8\u901f(5Gbps)\u548cUSB 2.0\u9ad8\u901f\uff08480Mbps\uff09\u63a5\u53e3\u3002 \u5b83\u4eec\u5404\u81ea\u5305\u542b\u7528\u4e8e\u6570\u636e\u6d41\u768432\u4f4d\u5e76\u884cFIFO\u63a5\u53e3\u548c\u7528\u4e8e\u63a7\u5236\u8def\u5f84\u914d\u7f6e\u7684UART\u63a5\u53e3\u3002 \u91c7\u752876\u5f15\u811aQFN\u5c01\u88c5\uff0c\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4\u4e3a-40\u00b0C\u81f385\u00b0C\u3002\n</code></pre>"},{"location":"Y2025/Y2025-02/#embedded-scripting-language-and-engine-for-rust","title":"Embedded scripting language and engine for Rust","text":"<p>Rhai:Embedded scripting language and engine for Rust</p>"},{"location":"Y2025/Y2025-02/#generates-makefiles-for-fpga-eda","title":"Generates Makefiles for FPGA EDA","text":"<p>Generates Makefiles for FPGA EDA</p>"},{"location":"Y2025/Y2025-02/#2025-02-13","title":"2025-02-13","text":""},{"location":"Y2025/Y2025-02/#how-to-evaluate-fpga","title":"How to Evaluate FPGA","text":"Property Value CLB BRAM DDR PCIE IO Speed SDRAM Flash Voltage"},{"location":"Y2025/Y2025-02/#2025-02-12","title":"2025-02-12","text":""},{"location":"Y2025/Y2025-02/#git-for-hardware-projects","title":"Git for Hardware Projects","text":"<p>Git for Hardware Projects</p>"},{"location":"Y2025/Y2025-02/#how-to-draw-schematics","title":"How to draw schematics","text":"<p>How to draw schematics</p>"},{"location":"Y2025/Y2025-02/#here-are-the-rules-i-use-when-creating-the-block-diagram","title":"Here are the rules I use when creating the block diagram","text":"<pre><code>Start with big functional blocks\nLink blocks with lines or arrows (arrows should represent data or power conversion flow)\nAdd labels to connecting lines for protocol names/voltage domains\nBreak down the big functional blocks into smaller blocks representing smaller circuits (a voltage regulator, load-switch, CAN transceiver, etc.)\nAdd labels with maximum expected power for each block\n</code></pre>"},{"location":"Y2025/Y2025-02/#heres-a-set-of-rules-i-use-when-designing-schematics","title":"Here\u2019s a set of rules I use when designing schematics","text":"<pre><code>Use the default grid and never deviate from it. This will make aligning symbols easier and avoid weird shapes on connecting wires.\nPositive power symbols always point up, ground always points down\nNever join two components by placing the attachment points on top of each other \u2014 always use a connection wire to join the components (if by chance something is off-grid, this will allow you to catch it)\nEnsure labels connected to an IC are aligned vertically\nLabel text should be placed on top of a wire (avoid hanging labels)\nTry to align power symbols horizontally\nIf you create or import symbols, make sure the symbol style is consistent with the rest library\nAvoid crossing wires in weird places\nMake sure every circuit is displayed in the way it is usually displayed in text-book examples (unless that hurts readability):\nVoltage dividers: resistors should be vertically aligned\nTransistors should be designed emitter facing down\nEnsure proper spacing between components in a way that text labels are readable and don\u2019t overlap with neighboring components\nWhere possible, ensure your components and circuit blocks are aligned\nKeep your wires at least 2 grid spacing long \u2014 keep this rule from pin to pin and from pin to wire crossings (break this rule only if this hurts readability)\nAvoid 4-wire junctions as these can easily lead to errors and don\u2019t improve readability\nBe consistent \u2014 make sure you always write things the same way. Are all your labels upper-case? How do you write capacitor values? 100nF, 100N, 0.1u? \u2014 choose a style and stick to it.\n</code></pre>"},{"location":"Y2025/Y2025-02/#chrome-app-mode","title":"Chrome App Mode","text":"<pre><code>chrome\u3067\u30a2\u30d7\u30ea\u30e2\u30fc\u30c9\nchrome\u3067\u3064\u304e\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u5358\u72ec\u306e\u30a2\u30d7\u30ea\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\u3067\u304d\u308b\u3002\n$ /opt/google/chrome/chrome -app=http://keep.google.com/\n$ chrome -app=http://hoge.com/\n\u3053\u308c\u306f\u3053\u308c\u3067\u826f\u3044\u306e\u304b\u3082\u2026\n</code></pre>"},{"location":"Y2025/Y2025-02/#system-d-2025","title":"System D 2025","text":"<p>System D 2025</p>"},{"location":"Y2025/Y2025-02/#2025-02-11","title":"2025-02-11","text":""},{"location":"Y2025/Y2025-02/#system-c-2025","title":"System C 2025","text":"<p>System C 2025</p>"},{"location":"Y2025/Y2025-02/#efinix-fpga-with-hyperram-and-spi-flash","title":"Efinix FPGA with HyperRAM and SPI Flash","text":"FPGA HyperRAM CLB Board Ti60F100 256Mb 62016 Titanium Ti60 F225 Development Kit <p>Efinix: Ti60F100</p> <p>Efinix Titanium Product</p> <p></p> <p></p>"},{"location":"Y2025/Y2025-02/#gowin-fpga-with-sdram-or-flash","title":"GoWin FPGA with SDRAM or Flash","text":"FPGA SDRAM CLB Board GW5AR 64Mb 23040 GW1NR 64Mb~128Mb 8,640 Tang Nano 9K/4K GW2AR 64Mb~128Mb 20736 Tang Nano 20K"},{"location":"Y2025/Y2025-02/#2025-02-10","title":"2025-02-10","text":"<p> Liberux Linux Phone</p> <p>Xilinx FPGA Compare</p>"},{"location":"Y2025/Y2025-02/#nnstreammer","title":"NNStreammer","text":"<p> NNStreammer</p>"},{"location":"Y2025/Y2025-02/#2025-02-08","title":"2025-02-08","text":""},{"location":"Y2025/Y2025-02/#uscope-linux-debugger","title":"UScope Linux Debugger","text":"<p>  UScope: A New Linux Debugger And Not A GDB Shell, Apparently</p>"},{"location":"Y2025/Y2025-02/#2025-02-07","title":"2025-02-07","text":""},{"location":"Y2025/Y2025-02/#fpga-sdcard-and-xdma","title":"FPGA SDCard and XDMA","text":"<p>FPGA as SD Card</p> <p>XDMA</p>"},{"location":"Y2025/Y2025-02/#wireless-headstage","title":"Wireless Headstage","text":"<p>Wireless Headstage</p>"},{"location":"Y2025/Y2025-02/#2025-02-06","title":"2025-02-06","text":""},{"location":"Y2025/Y2025-02/#syntalos","title":"Syntalos","text":"<p>Syntalos Github</p> <p>Syntalos: a software for precise synchronization of simultaneous multi- modal data acquisition and closed-loop interventions</p> <p>Supplementary Information</p> <p></p> <p></p>"},{"location":"Y2025/Y2025-02/#yowasp-and-amaranth","title":"YOWASP and Amaranth","text":"<p>Unofficial WebAssembly-based packages for Yosys, nextpnr, and more</p>"},{"location":"Y2025/Y2025-02/#openmv-2025-02-06","title":"OpenMV 2025-02-06","text":"<p>OMV is the core lib</p>"},{"location":"Y2025/Y2025-02/#brain-in-the-loop","title":"Brain in the Loop","text":"<p>\"cerebral organoids,\u201d small artificial brain tissues, created using iPS cells</p> <p>Brain Processing Unit </p>"},{"location":"Y2025/Y2025-02/#low-bit-llm-on-edge","title":"Low bit LLM on Edge","text":"<p>Low bit LLM on Edge</p>"},{"location":"Y2025/Y2025-02/#why-animal-sleep","title":"Why Animal Sleep","text":"<p>Why Animal Sleep</p>"},{"location":"Y2025/Y2025-02/#2025-02-05","title":"2025-02-05","text":""},{"location":"Y2025/Y2025-02/#openmv-2025-02-05","title":"OpenMV 2025-02-05","text":"<p>OpenMV RT</p> <ol> <li>The RT1062 ARM Cortex M7 processor running at 600 MHz  with 32MBs SDRAM + 1MB of SRAM and 16 MB of program/storage flash.  All I/O pins output 3.3V and are 3.3V tolerant.  The processor has the following I/O interfaces:</li> <li>A high speed USB-C (480Mbs) interface to your computer.  Your OpenMV Cam will appear as a Virtual COM Port  and a USB Flash Drive when plugged in. 1.5A current limited. With EMI Filtering and TVS protection.</li> <li>A \u03bcSD Card socket capable of 25MB/s reads/writes  which allows your OpenMV Cam to take pictures and  easily pull machine vision assets off of the \u03bcSD card. With EMI Filtering and TVS protection.</li> <li>A SPI bus that can run up to 60Mb/s  allowing you to easily stream image data off the system to  either the LCD Shield or another microcontroller.</li> </ol>"},{"location":"Y2025/Y2025-02/#google-rust-course","title":"Google Rust Course","text":"<p>Google Comprehensive Rust Course</p>"},{"location":"Y2025/Y2025-02/#tsmc-revenu","title":"TSMC Revenu","text":""},{"location":"Y2025/Y2025-02/#2025-02-04","title":"2025-02-04","text":""},{"location":"Y2025/Y2025-02/#system-b-2025","title":"System B 2025","text":"<p>SystemB_2025.md</p>"},{"location":"Y2025/Y2025-02/#reasons-not-to-refactor","title":"Reasons not to refactor","text":"<p>Reasons not to refactor URL</p>"},{"location":"Y2025/Y2025-02/#the-philosophy-of-architecture","title":"The Philosophy of Architecture","text":"<p>The Philosophy of Architecture - Barry O'Reilly - NDC Oslo 2024</p> <p></p> <p></p>"},{"location":"Y2025/Y2025-02/#type-c","title":"Type-C","text":""},{"location":"Y2025/Y2025-02/#pico-pio-02-04","title":"PICO PIO 02-04","text":"<p>A Practical Look at PIO on the Raspberry Pi Pico URL</p> <p>Introduction to the PIO (Programmable Input Output) of the RP2040</p>"},{"location":"Y2025/Y2025-02/#chip-alliance","title":"Chip Alliance","text":"<p>Chip Alliance</p> <pre><code>Chisel HDL\nF4FPGA\n</code></pre>"},{"location":"Y2025/Y2025-02/#john-maynard-keynes","title":"John Maynard Keynes","text":"<p>Masters Of Money | Part 1 | John Maynard Keynes</p>"},{"location":"Y2025/Y2025-02/#2025-02-03","title":"2025-02-03","text":""},{"location":"Y2025/Y2025-02/#pico-pio-02-03","title":"PICO PIO 02-03","text":"<p>Raspberry Pi Pico PIO Video</p> <p>programmable-io-programming @ circuitcellar URL</p>"},{"location":"Y2025/Y2025-02/#xilinx-7-series-family-compare","title":"Xilinx 7 Series Family Compare","text":"<p>Xilinx 7 Series Family URL</p> <p>7-series-product-selection-guide PDF</p>"},{"location":"Y2025/Y2025-02/#sipeed-fpga-console-use-gowin","title":"Sipeed FPGA Console use Gowin","text":"<p>sipeed console URL</p> <p></p> <p></p>"},{"location":"doc_templates/app_spec/","title":"App Specification","text":""},{"location":"doc_templates/app_spec/#support-os","title":"Support OS","text":"<pre><code>Windows ?\nLinux \nMac OS ?\n</code></pre>"},{"location":"doc_templates/app_spec/#language","title":"Language","text":"<pre><code>C++\n</code></pre>"},{"location":"doc_templates/app_spec/#framewors","title":"Framewors","text":"<pre><code>QT\n</code></pre>"},{"location":"doc_templates/app_spec/#function-description","title":"Function Description","text":"<pre><code>Provide Xdaq user a gui app to test xdaq major functionality\n</code></pre>"},{"location":"doc_templates/app_spec/#data-structure","title":"Data Structure","text":""},{"location":"doc_templates/app_spec/#detail-function-block","title":"Detail Function Block","text":""},{"location":"doc_templates/board_spec/","title":"Board Specification","text":""},{"location":"doc_templates/board_spec/#tool","title":"Tool","text":"<pre><code>KiCad\n</code></pre>"},{"location":"doc_templates/board_spec/#function-description","title":"Function Description","text":"<pre><code>Main Function\nSupport Function\n</code></pre>"},{"location":"doc_templates/board_spec/#io-define","title":"IO Define","text":"Pin Function IO PA0 Rest Input"},{"location":"doc_templates/board_spec/#detail-block","title":"Detail Block","text":""},{"location":"doc_templates/board_spec/#power","title":"Power","text":"<pre><code>Type-C 20V\n20V to 12V\n12V to 5V\n5V to 3.3V\n5V to 2.5V\n5V to 1.8V\n</code></pre>"},{"location":"doc_templates/board_spec/#control-path","title":"Control Path","text":"<pre><code>SPI CS/CLK -&gt; LVDS\n</code></pre>"},{"location":"doc_templates/board_spec/#data-path","title":"Data Path","text":"<pre><code>SPI MISO/MOSI &lt;-&gt; LVDS\n</code></pre>"},{"location":"doc_templates/firmware_spec/","title":"Firmware Specification","text":""},{"location":"doc_templates/firmware_spec/#mcu","title":"MCU","text":"<pre><code>STM32\n</code></pre>"},{"location":"doc_templates/firmware_spec/#ide-tool","title":"IDE &amp; Tool","text":"<pre><code>Arduino \nSTM32IDE with FreeRTOS\n</code></pre>"},{"location":"doc_templates/firmware_spec/#language","title":"Language","text":"<pre><code>C &amp; C++\n</code></pre>"},{"location":"doc_templates/firmware_spec/#function-description","title":"Function Description","text":"<pre><code>Main Function\nSupport Function\n</code></pre>"},{"location":"doc_templates/firmware_spec/#io-define","title":"IO Define","text":"Pin Function IO PA0 Rest Input"},{"location":"doc_templates/firmware_spec/#data-structure","title":"Data Structure","text":"<pre><code>struct person_t {\n    char *name;\n    unsigned age;\n};\n</code></pre>"},{"location":"doc_templates/firmware_spec/#detail-function-block","title":"Detail Function Block","text":"<pre><code>hardware_init\ndriver\nuser_io_fn\ncomm_io_fn\nmain_algorithem\nlog_fn\n</code></pre>"},{"location":"doc_templates/software_doc/","title":"Software Documentation","text":""},{"location":"doc_templates/software_doc/#prepare-your-machines","title":"Prepare your Machines","text":""},{"location":"doc_templates/software_doc/#connect-your-device","title":"Connect your device","text":""},{"location":"doc_templates/software_doc/#install-software","title":"Install Software","text":""},{"location":"doc_templates/software_doc/#test-connection","title":"Test Connection","text":""},{"location":"doc_templates/software_doc/#first-run","title":"First Run","text":""},{"location":"doc_templates/software_doc/#check-the-result","title":"Check the Result","text":""},{"location":"doc_templates/software_doc/#faq","title":"FAQ","text":""},{"location":"projects/amaranth_tutorial/","title":"Contents","text":"<ol> <li>Requirment</li> <li>Computer/Software/Hardware</li> <li>Install</li> <li> <p>Hello World</p> </li> <li> <p>Basic Data Type</p> </li> <li>Data Opertaion</li> <li>Simulation</li> <li> <p>Strategy</p> </li> <li> <p>Counter</p> </li> <li>Input /Key</li> <li> <p>Output /LED</p> </li> <li> <p>IO to PC (UART)</p> </li> <li> <p>IO to PC (USB)</p> </li> </ol>"},{"location":"projects/amaranth_tutorial/#reference","title":"Reference","text":"<p>Official Read Me</p> <p>Google Examples</p>"},{"location":"projects/litex_tutorial/","title":"Index","text":""},{"location":"projects/litex_tutorial/#file-flow","title":"File Flow","text":"<p>This diagram is the flow of files from design to bit file. (bit file is the data go to fpga as programe)</p> <p>We forcus on the Green part, Most of them are Python code.</p> <p>I know simulation is important,</p> <p>But now let's just rock the chip, without worried too much about simulation.</p>"},{"location":"projects/litex_tutorial/#begin","title":"Begin","text":"<p>Let's write gateware use python with Litex.</p> <p>https://github.com/enjoy-digital/litex</p> <p>I like FPGA very much, and I use it since XC3000 seriese came out.</p> <p>In the old time, you need to write verilog or vhdl to program FPGA.</p> <p>(I know there are block diagram tools, but that is not very easy to scale)</p> <p>So,</p> <p>With the help of Litex and Migen, We can use Python to do the job.</p> <p>Without open the build tool from vendor . (like Vivado ....)</p> <p>Fire VSCode, write the function you want.</p> <p>Just like write any python code.</p> <p>We can forcus on our design and forget the hassle of the vendor tools. (like Vivado..)</p> <p>It is a good idea to learn more about fpga and vendor tool. If you want more.</p>"},{"location":"projects/litex_tutorial/#board-1","title":"Board 1","text":"<p>To learn FPGA design , you may need FPGA board like the one in the picture.</p> <p>These kind of board provide many Input Switch, Output LED for you to enter and display data.</p> <p>But, </p> <p>With LiteX , you can use Host PC Python code to provide the data and read out the result.</p> <p>Or use ILA to capture the wave form then dispay on gtkWave. </p> <p>(Vandor provide these tool , too, but if you can consolidate eveything in one language and better language, why not)</p> <p>So, you don't need these kind of board anymore.</p> <p>But sometimes you need the IO Port, like PCIE, HSMI?, ethernet, </p> <p>So pick the board with the IO you are interesting with.</p>"},{"location":"projects/litex_tutorial/#board-2","title":"Board 2","text":"<p>My criteria to select a learning fpga board is based on </p> <p>1.At least one user led.</p> <p>for heartbeat display. </p> <p>2.Direct UART to USB connector</p> <p>for Host debug.</p> <p>3.Direct USB Programming , no download cable needed.</p> <p>Above board is from Microphase A7-Lite. </p> <p>I have use it for prototyping and testing tool.</p>"},{"location":"projects/litex_tutorial/#host-software","title":"Host Software","text":"<ol> <li> <p>PC with 16G Memory</p> </li> <li> <p>OS Ubuntu 20.04 or Windows with VirtualBox + Ubuntu 20.04</p> </li> <li> <p>Hardisk &gt; 120G</p> </li> <li> <p>Vendor Tools, Linux Version </p> </li> </ol> <p>I use Vivado 2018.3, because the vivado 2018 is smaller.</p> <p>https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/vivado-design-tools/archive.html</p> <p>If vivado installation hang.</p> <p>sudo apt update sudo apt upgrade sudo apt install libncurses5 sudo apt install libtinfo5 sudo apt install libncurses5-dev libncursesw5-dev sudo apt install ncurses-compat-libs for Ubuntu 20.04</p> <ol> <li>iceStorm tool chain for Lattice ICE40 and ECP5 </li> </ol> <p>https://clifford.at/icestorm</p> <ol> <li>LiteX (follow the instruction on Github)</li> </ol> <p>https://github.com/enjoy-digital/litex</p> <ol> <li>LiteX-Boards from LiteX-Hub</li> </ol> <p>https://github.com/litex-hub/litex-boards</p> <ol> <li>OpenFPGALoader</li> </ol> <p>https://github.com/trabucayre/openFPGALoader</p> <p>8.GTKWave</p> <p>sudo apt-get install gtkwave</p> <p>9.VSCode  https://code.visualstudio.com/</p> <p>HDL,HLS and Digital Design We use Python as HDL. It is not HLS.</p> <p>Which means you still need to know Digital Logic Design</p> <p>Note:</p> <p>HDL stand for hardware description language.</p> <p>verilog and vhdl are HDL</p> <p>migen, Amaranth are python based HDL</p> <p>Chisel are Scala based HDL</p> <p>HLS stand for high level synthesis</p> <p>HLS let you use normal C program to describe the operation you want hardware to do.</p> <p>systemC and some vendor specific C belong to that.</p>"},{"location":"projects/litex_tutorial/#basic-digital-logic-design","title":"Basic Digital Logic Design:","text":"<p>Combination Logic:</p> <pre><code>Not, And, Or, Xor, Mux, DeMux, Encoder, Decoder,....\n</code></pre> <p>Sequential Logic:</p> <pre><code>Dff, Dff with Reset, Counter, Shift_Register, ...\n</code></pre> <p>Clock Domain Crossing</p> <p>Bus Protocol:</p> <pre><code>Wishbone Bus, AXI Bus, AXI Stream, ...\n</code></pre> <p>Basic IO Protocol:</p> <pre><code>UART, I2C, SPI,...\n</code></pre> <p>Complex IO:</p> <pre><code>PCIE, DDR, Ethernet, USB,....\n</code></pre> <p>Terminology:</p> <pre><code>Signal, Clock, Reset, Bus, Ready, Valid, .....\n</code></pre> <p>Your should familiar with above stuff.</p> <p>If not, YouTub or Udemy have some lessons for Digital Logic Design.</p>"},{"location":"projects/litex_tutorial/#verilog","title":"Verilog","text":"<p>Why I use migen/Amaranth as HDL , instead of Verilog. </p> <p>Because:</p> <p>Verilog is not good at data encapsulation. </p> <p>It is messy when you try to wiring stuff together.</p> <p>It lack modern language feature like namespace to help you module your code.</p> <p>Use python you treat wire as data , you can move it around, pass it around.</p> <p>Group wire together, manipulate them as whole.</p> <p>It make the code easy to read and debug.</p> <p>You will see latter.</p> <p>Verilog is  Assembly code for Synthesizer to generate gateware. </p> <p>migen/Amaranth are C code  for People to read.</p>"},{"location":"projects/litex_tutorial/#define-board-io-ports-board-a7lite","title":"Define Board IO Ports (Board-A7Lite)","text":"<p>from migen import *</p> <p>from litex.gen import * from litex.build.generic_platform import *</p> <p>_io = [     (\"clk50\", 0, Pins(\"J19\"), IOStandard(\"LVCMOS33\")),     (\"reset\",  0, Pins(\"L18\"), IOStandard(\"LVCMOS33\")),     (\"serial\", 0,         Subsignal(\"tx\", Pins(\"V2\")),         Subsignal(\"rx\", Pins(\"U2\")),         IOStandard(\"LVCMOS33\"),     ), ]</p> <p>a7lite_io.py</p> <p>Check the board's schematics design, and find these signal. 1. Clock 2. Reset 3. UART</p>"},{"location":"projects/litex_tutorial/#kick-starting-minimum-code","title":"Kick Starting Minimum Code","text":""},{"location":"projects/litex_tutorial/#usrbinenv-python3","title":"!/usr/bin/env python3","text":"<p>from migen import *</p> <p>from litex.gen import * from litex.soc.interconnect.csr import *</p> <p>from litex.build.generic_platform import * from litex.build.xilinx import XilinxPlatform</p> <p>from litex.soc.integration.soc_core import * from litex.soc.integration.builder import *</p> <p>from litex.soc.cores.clock import * from litex.soc.cores.uart import UARTWishboneBridge from litex.soc.cores import dna</p> <p>from a7lite_io import _io</p> <p>class Platform(XilinxPlatform): #-------------&gt; 1     default_clk_name   = \"clk50\"     default_clk_period = 1e9/50e6</p> <pre><code>def __init__(self):\n    XilinxPlatform.__init__(self, \"xc7a35t-fgg484-2\", \n                            _io, toolchain=\"vivado\") \n    #---&gt; 2\n</code></pre>"},{"location":"projects/litex_tutorial/#design-","title":"Design -------------------------------------------------------------------------------------------","text":""},{"location":"projects/litex_tutorial/#create-our-platform-fpga-interface","title":"Create our platform (fpga interface)","text":""},{"location":"projects/litex_tutorial/#crg-","title":"CRG ----------------------------------------------------------------------------------------------","text":"<p>class CRG(LiteXModule): #------------&gt; 3     def init(self, platform, sys_clk_freq):         self.cd_sys       = ClockDomain()         self.cd_sys4x     = ClockDomain()         self.cd_sys4x_dqs = ClockDomain()         self.cd_idelay    = ClockDomain()</p> <pre><code>    # Clk/Rst\n    clk50 = platform.request(\"clk50\")\n\n    # PLL\n    self.pll = pll = S7MMCM(speedgrade=-1)\n    self.comb += pll.reset.eq(~platform.request(\"reset\"))\n    #self.comb += pll.reset.eq(self.rst)\n    pll.register_clkin(clk50, 50e6) #---&gt; Claim input clk is 50MHz\n    pll.create_clkout(self.cd_sys,       sys_clk_freq)\n    pll.create_clkout(self.cd_sys4x,     4*sys_clk_freq)\n    pll.create_clkout(self.cd_sys4x_dqs, 4*sys_clk_freq, phase=90)\n    pll.create_clkout(self.cd_idelay,    sys_clk_freq)\n    platform.add_false_path_constraints(self.cd_sys.clk, pll.clkin) \n    # Ignore sys_clk to pll.clkin path created by SoC's rst.\n\n    self.idelayctrl = S7IDELAYCTRL(self.cd_idelay)\n</code></pre>"},{"location":"projects/litex_tutorial/#create-our-soc-fpga-description","title":"Create our soc (fpga description)","text":"<p>class BaseSoC(SoCMini):     def init(self, platform, **kwargs):         sys_clk_freq = int(100e6)</p> <pre><code>    # SoCMini (No CPU, we are controlling the SoC over UART)\n    SoCMini.__init__(self, platform, sys_clk_freq,  \n                     csr_data_width=32,\n                     ident=\"Hello World \\r\\n\", \n                     ident_version=True) #----------------&gt; 4\n\n    # Clock Reset Generation\n    self.submodules.crg = CRG(platform, sys_clk_freq)\n\n    # No CPU, use Serial to control Wishbone bus\n    self.add_uartbone(name=\"uart_debug\", baudrate=115200)  #---------&gt;5\n\n    # FPGA identification\n    self.submodules.dna = dna.DNA()\n    self.add_csr(\"dna\") #------&gt; 6\n</code></pre>"},{"location":"projects/litex_tutorial/#initialization-","title":"Initialization ----------------------------------------------------------------------------------","text":"<p>platform = Platform() soc = BaseSoC(platform)</p>"},{"location":"projects/litex_tutorial/#build-","title":"Build --------------------------------------------------------------------------------------------","text":"<p>builder = Builder(soc, output_dir=\"build\", csr_csv=\"test/csr.csv\") </p>"},{"location":"projects/litex_tutorial/#-7","title":"-----&gt;7","text":"<p>builder.build(build_name=\"top1\") #-----&gt;8</p> <p>a7lite.py  (Any file name you like, I use the board name Most people use the function name of the FPGA)</p> <ol> <li>What platform it use. (Which FPGA Vendor)</li> <li>Define the FPGA deivce type. \"xc7a35t-fgg484-2\" </li> <li>Create System Clocks from clk50 external clock source</li> <li>Create an SOC with No SOC inside but have a Wishbone Bus System</li> <li>Create an UART Wishbone Bus Master ,  for Host access System CSR &lt;--- Explain Latter</li> <li>Add an CSR to access FPGA Identification Code</li> <li>Build the gateware under build folder and  generate CSR access register file in test folder.</li> <li>gateware bit file name set to top.bit</li> </ol> <p>I use this \"minimum code\" as my stating point.</p>"},{"location":"projects/litex_tutorial/#folder-structure","title":"Folder Structure","text":"<p>Before run the code</p> <p>Create a test folder for LiteX 's csr register address table.</p> <p>After run &gt;python3 a7lite.py</p> <p>You will get a build folder with</p> <p>gateware folder for fpga build process log</p> <p>and software folder for soc bios code. </p> <p>(the bare minimum code don't have soc , so there is no bios code)</p>"},{"location":"projects/litex_tutorial/#load-bit-file-to-fpga","title":"Load bit file to FPGA","text":"<p>After create the bit file. You need to load it to FPGA. I wrote a load.py to load the bit file.</p> <p>load.py</p>"},{"location":"projects/litex_tutorial/#usrbinenv-python3_1","title":"!/usr/bin/env python3","text":"<p>import os</p>"},{"location":"projects/litex_tutorial/#ossystemopenfpgaloader-scan-usb","title":"os.system(\"openFPGALoader --scan-usb\")","text":""},{"location":"projects/litex_tutorial/#ossystemopenfpgaloader-buildgatewaretop1bit","title":"os.system(\"openFPGALoader ./build/gateware/top1.bit\")","text":""},{"location":"projects/litex_tutorial/#ossystemopenfpgaloader-c-digilent_hs3-buildgatewaretop1bit","title":"os.system(\"openFPGALoader -c digilent_hs3 ./build/gateware/top1.bit\")","text":"<p>os.system(\"openFPGALoader -c digilent_hs2 ./build/gateware/top1.bit\")</p> <p>You need to know the cable type. Run &gt;openFPGALoader --scan-usb and then pick the right cable type Mine is digilent_HS2</p> <p>Run &gt;openFPGALoader -c digilent_hs2 ./build/gateware/top1.bit</p>"},{"location":"projects/litex_tutorial/#start-host-debug-server","title":"Start Host Debug Server","text":"<p>start_server.py</p>"},{"location":"projects/litex_tutorial/#usrbinenv-python3_2","title":"!/usr/bin/env python3","text":"<p>import os</p> <p>cmd = \"litex_server --uart --uart-port=/dev/ttyUSB0\"</p>"},{"location":"projects/litex_tutorial/#cmd-litex_server-jtag-jtag-configopenocd_xc7_ft232cfg","title":"cmd = \"litex_server --jtag --jtag-config=openocd_xc7_ft232.cfg\"","text":""},{"location":"projects/litex_tutorial/#cmd-litex_server-jtag-jtag-configopenocd_xc7_ft2232cfg","title":"cmd = \"litex_server --jtag --jtag-config=openocd_xc7_ft2232.cfg\"","text":"<p>os.system(cmd)</p> <p>We need to start a host debug server ,  depends on the debug interface. You can use UART, Jtag, ethernet, SPI....</p> <p>Reference  https://github.com/enjoy-digital/litex/wiki/Use-Host-Bridge-to-control-debug-a-SoC</p>"},{"location":"projects/litex_tutorial/#test_identifierpy","title":"Test_Identifier.py","text":""},{"location":"projects/litex_tutorial/#usrbinenv-python3_3","title":"!/usr/bin/env python3","text":"<p>from litex import RemoteClient</p> <p>wb = RemoteClient() wb.open()</p> <p>print(\"Test Read Identifyer\")</p>"},{"location":"projects/litex_tutorial/#get-identifier","title":"get identifier","text":"<p>fpga_id = \"\" for i in range(256):     c = chr(wb.read(wb.bases.identifier_mem + 4*i) &amp; 0xff)     fpga_id += c     if c == \"\\0\":         break print(\"fpga_id: \" + fpga_id)</p> <p>I put all my test in test folder.  Generated csr.csv is also in the test folder.</p> <p>By default the RemoteClient() will open csr.csv So it will know each CSR's address by name. The we can access these CSR easily.</p> <p>The CSR we read is the  ident define in the SocMini.</p>"},{"location":"projects/litex_tutorial/#what-is-csr","title":"What is CSR","text":"<p>Reference: https://github.com/enjoy-digital/litex/wiki/CSR-Bus</p> <p>CSR is the 2nd best thing in Litex First is the Build System. (We will talk about it later)</p> <p>CSR stand for Control Staus Register If FPGA is a function, CSR is the parameter you pass into the function.</p> <p>All the CSR can be access through Wishbone Bus system.</p> <p>And you can access Wishbone Bus from Host </p> <p>https://en.wikipedia.org/wiki/Wishbone_(computer_bus)</p>"},{"location":"subtitles/Artix7vsKintex/","title":"Artix 7 vs Kintex 7 vs Kintex Ultra","text":""},{"location":"subtitles/Artix7vsKintex/#table","title":"Table","text":"FPGA Artix Kintex Kintex UltraScale Process 28nm 28nm 20nm Transceiver 6.5Gbps 12.5Gbps 16.3Gbps DDR 1066Mb/s 1866Mb/s 2400Mb/s PCIE Gen2 X 4 Gen2 X 8 Gen3 x 8 Max Size 200T 480T KU115 CLB 269200 597200 1326720 IO(S/D) 500/240 500/240 676/312 BRAM 13140 34380 75.9Mb DSP 740 1920 5520 100G Yes"},{"location":"subtitles/Artix7vsKintex/#module-provider","title":"Module Provider","text":""},{"location":"subtitles/Artix7vsKintex/#microphase","title":"Microphase","text":"<p>Artix 7: XME0712</p> <p>Kintex UltraScale+: XME0835</p>"},{"location":"subtitles/Artix7vsKintex/#alinx","title":"ALINX","text":"<p>Artix 7</p> <p>Kintex 7</p> <p>Kintex UltraScale</p>"},{"location":"subtitles/Artix7vsKintex/#numatolab","title":"NumatoLab","text":"<p>Artix 7</p> <p>Kintex 7</p>"},{"location":"subtitles/FT2232_SPI_Intan/","title":"FT2232 for Intan through SPI","text":"<p>PYFTDI Github https://github.com/eblot/pyftdi</p> <pre><code>import serial\nimport serial.tools.list_ports\n\nport_list = list(serial.tools.list_ports.comports())\nfor i in range(0, len(port_list)):\n    print(port_list[i])\n\nport = input(\"Select Ports (/dev/ttyACM0)\")\nif (port == \"\"):\n    port = \"/dev/ttyACM0\"\n\nser = serial.Serial(port, 2152000, timeout=1)\n\nser.write(b'cmm=speed,1000\\r\\n')\n</code></pre>"},{"location":"subtitles/STM32_DAC_DMA/","title":"STM32 ADC DMA","text":"<pre><code>/*\nTests the DAC functionality\n*/\n\n#include &lt;libmaple/gpio.h&gt;\n#include &lt;libmaple/dac.h&gt;\n#include &lt;libmaple/dma.h&gt;\n\n\n#define SINE 1\n#define TIANGLE 2\n\n// use only one of the values: TRIANGLE or SINE\n#define GEN_WAVE           SINE // use sine_wave lookup table\n//#define GEN_WAVE       TRIANGLE // use internal generator.\n\n#if GEN_WAVE==TRIANGLE\n  // select wave amplitude:\n  // 3 for 3.3Vpp (8192 samples),\n  // 2 for 1.65Vpp (4096 samples),\n  // 1 for 0.87Vpp (2048 samples)\n  #define WAVE_AMP 1\n#endif\n/*\n sine wave look-up table from: http://www.daycounter.com/Calculators/Sine-Generator-Calculator.phtml\n*/\nconst uint8_t sine_wave[210] = {\n0x80,0x83,0x87,0x8b,0x8f,0x93,0x96,0x9a,0x9e,0xa1,0xa5,0xa9,0xac,0xb0,0xb3,0xb7,0xba,0xbe,0xc1,0xc4,0xc7,\n0xca,0xcd,0xd0,0xd3,0xd6,0xd9,0xdc,0xde,0xe1,0xe3,0xe6,0xe8,0xea,0xec,0xee,0xf0,0xf2,0xf3,0xf5,0xf6,0xf8,\n0xf9,0xfa,0xfb,0xfc,0xfd,0xfd,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfe,0xfd,0xfd,0xfc,0xfb,0xfa,\n0xf9,0xf8,0xf6,0xf5,0xf3,0xf2,0xf0,0xee,0xec,0xea,0xe8,0xe6,0xe3,0xe1,0xde,0xdc,0xd9,0xd6,0xd3,0xd0,0xcd,\n0xca,0xc7,0xc4,0xc1,0xbe,0xba,0xb7,0xb3,0xb0,0xac,0xa9,0xa5,0xa1,0x9e,0x9a,0x96,0x93,0x8f,0x8b,0x87,0x83,\n0x80,0x7c,0x78,0x74,0x70,0x6c,0x69,0x65,0x61,0x5e,0x5a,0x56,0x53,0x4f,0x4c,0x48,0x45,0x41,0x3e,0x3b,0x38,\n0x35,0x32,0x2f,0x2c,0x29,0x26,0x23,0x21,0x1e,0x1c,0x19,0x17,0x15,0x13,0x11,0x0f,0x0d,0x0c,0x0a,0x09,0x07,\n0x06,0x05,0x04,0x03,0x02,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x03,0x04,0x05,\n0x06,0x07,0x09,0x0a,0x0c,0x0d,0x0f,0x11,0x13,0x15,0x17,0x19,0x1c,0x1e,0x21,0x23,0x26,0x29,0x2c,0x2f,0x32,\n0x35,0x38,0x3b,0x3e,0x41,0x45,0x48,0x4c,0x4f,0x53,0x56,0x5a,0x5e,0x61,0x65,0x69,0x6c,0x70,0x74,0x78,0x7c,\n};\n//-----------------------------------------------------------------------------\n\nconst uint8_t SPEAKER_PIN = PA4; // DAC ch1 output\n\n//-----------------------------------------------------------------------------\nconst int OUT_FREQ   = 10000; // Output waveform frequency in Hz\n\nconst int CNT_FREQ   = 84000000;  // TIM6 counter clock (prescaled APB1*2)\n\n#if GEN_WAVE==SINE\n  const int WAVE_RES   = sizeof(sine_wave); // Waveform resolution\n#elif GEN_WAVE==TRIANGLE\n  #if   WAVE_AMP==3\n    const int WAVE_RES   = 8192;\n  #elif WAVE_AMP==2\n    const int WAVE_RES   = 4096;\n  #elif WAVE_AMP==1\n    const int WAVE_RES   = 2048;\n  #endif\n#endif\n\nconst int TIM_PERIOD = ((CNT_FREQ)/((WAVE_RES)*(OUT_FREQ))); // Autoreload reg value\n\n//-----------------------------------------------------------------------------\nvoid blink(void)\n{\n    digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));\n}\n//-----------------------------------------------------------------------------\n// DMA1 - DMA_CH7 - DMA_STREAM5 (DAC1), DMA_STREAM6 (DAC2) \n// data from the buffer is transferred to DAC_each time TIM6 trigger occurs\n//-----------------------------------------------------------------------------\nvoid DMA_setup(void)\n{\n    // configure DMA\n    dma_init(DMA1);\n    dma_setup_transfer( DMA1,\n                        DMA_STREAM5,\n                        DMA_CH7,\n                        DMA_SIZE_8BITS,\n                        //DMA_SIZE_16BITS,\n                        &amp;(DAC-&gt;regs-&gt;DHR8R1),  // peripheral address\n                        //&amp;(DAC-&gt;regs-&gt;DHR12R1),   // peripheral address\n                        sine_wave, // memory bank 0 address\n                        NULL,     // memory bank 1 address\n                        (DMA_FROM_MEM | DMA_MINC_MODE | DMA_CIRC_MODE)\n    );\n    dma_set_num_transfers(DMA1, DMA_STREAM5, WAVE_RES);\n    dma_set_fifo_flags(DMA1, DMA_STREAM5, 0);\n    dma_clear_isr_bits(DMA1, DMA_STREAM5);\n    dma_enable(DMA1, DMA_STREAM5);\n    Serial.print(\"&gt; DMA: CR = 0x\"); Serial.print(DMA1-&gt;regs-&gt;STREAM[DMA_STREAM5].CR, HEX);\n    Serial.print(\", NDTR = 0x\"); Serial.println(DMA1-&gt;regs-&gt;STREAM[DMA_STREAM5].NDTR, HEX);\n}\n//-----------------------------------------------------------------------------\nvoid Timer_setup(void)\n{\n    timer_pause(TIMER6);\n    timer_set_prescaler(TIMER6, 0); // use 84MHz internal clock\n    timer_set_reload(TIMER6, (TIM_PERIOD&gt;7) ? (TIM_PERIOD-1) : 7); // minimum allowable value is 7\n    timer_set_master_mode(TIMER6, TIMER_MASTER_MODE_UPDATE); // update event will generate TRGO\n    timer_generate_update(TIMER6);\n    timer_resume(TIMER6); // start timer\n    Serial.print(\"&gt; TIM6 CR1 = 0x\"); Serial.println((TIMER6-&gt;regs).bas-&gt;CR1, HEX);\n    Serial.print(\"&gt; TIM6 PSC = 0x\"); Serial.println((TIMER6-&gt;regs).bas-&gt;PSC, HEX);\n    Serial.print(\"&gt; TIM6 ARR = 0x\"); Serial.println((TIMER6-&gt;regs).bas-&gt;ARR, HEX);\n    Serial.print(\"&gt; TIM6 SR = 0x\"); Serial.println((TIMER6-&gt;regs).bas-&gt;SR, HEX);\n}\n//-----------------------------------------------------------------------------\nvoid DAC_setup(void)\n{\n    dac_init();\n#if GEN_WAVE==SINE\n    dac_enable_dma(DAC_CH1);\n    dac_set_wave(DAC_CH1, DAC_WAVE_DISABLED);\n#elif GEN_WAVE==TRIANGLE\n    dac_set_wave(DAC_CH1, DAC_WAVE_TRIANGLE);\n    dac_set_mask_amplitude(DAC_CH1, \n  #if WAVE_AMP==3\n    11\n  #elif WAVE_AMP==2\n    10\n  #elif WAVE_AMP==1\n    9\n  #endif\n    );\n#else\n  #error \"No wave selected!\"\n#endif\n    dac_set_trigger(DAC_CH1, DAC_TRG_TIMER6TRGO);\n    dac_enable(DAC_CH1);\n    Serial.print(\"&gt; DAC: CR = 0x\"); Serial.println(DAC-&gt;regs-&gt;CR, HEX);\n}\n//-----------------------------------------------------------------------------\nvoid setup()\n{\n    pinMode(LED_BUILTIN, OUTPUT);\n    digitalWrite(LED_BUILTIN, LOW);\n\n    Serial.begin(115200);\n    //while (!Serial); delay(100);\n    Serial.println(\"DAC test example\\n\");\n\n    DAC_setup();\n#if GEN_WAVE==SINE\n    DMA_setup();\n#endif\n    Timer_setup();\n    Serial.println(\"DAC triangle wave generation started.\");\n}\n//-----------------------------------------------------------------------------\nuint8_t counter;\nuint32_t t;\n//-----------------------------------------------------------------------------\nvoid loop()\n{\n    if ( (millis()-t)&gt;=1000 )\n    {\n        t = millis();\n        blink();\n    }\n}\n</code></pre>"},{"location":"subtitles/SYZYGY_Interface/","title":"SYZYGY Interface","text":"<p>SYZYGY Interface syzygyfpga.io</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"subtitles/SystemB_2025/","title":"System B","text":""},{"location":"subtitles/SystemB_2025/#syzygy-interface","title":"SYZYGY Interface","text":"<p>SYZYGY Interface syzygyfpga.io</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"subtitles/SystemB_2025/#block-diagrams","title":"Block Diagrams","text":""},{"location":"subtitles/SystemB_2025/#wireless","title":"Wireless","text":"<p>Wireless.dio</p> <p></p>"},{"location":"subtitles/SystemB_2025/#daq2daq","title":"DAQ2DAQ","text":"<p>DAQ2DAQ.dio</p> <p></p>"},{"location":"subtitles/SystemB_2025/#sync-distribution","title":"Sync Distribution","text":"<p>SyncDistribution.dio</p> <p></p>"},{"location":"subtitles/SystemB_2025/#trigger","title":"Trigger","text":"<p>Trigger.dio</p> <p></p>"},{"location":"subtitles/SystemB_2025/#examples","title":"Examples","text":"<p>Open Ephys Trigger &amp; Sync Exampls</p> <p></p> <p>NeuroLynx Trigger &amp; Sync Exampls</p> <p></p> <p></p>"},{"location":"subtitles/SystemB_2025/#digital-and-analog-sub-system","title":"Digital and Analog Sub System","text":"<p>Digital_Analog Subsystem</p> <p></p>"},{"location":"subtitles/SystemC_2025/","title":"System C","text":""},{"location":"subtitles/SystemC_2025/#serdes-headstage","title":"Serdes HeadStage","text":""},{"location":"subtitles/SystemC_2025/#block-diagram","title":"Block Diagram","text":""},{"location":"subtitles/SystemC_2025/#fpga","title":"FPGA","text":"FPGA Power EEPROM Intel Max10 3.3V Embedded efinix T8 1.1V Core   3.3V IO External"},{"location":"subtitles/SystemC_2025/#pin-requirements","title":"Pin Requirements","text":"Block Pin Number Description RHD 7 CMOS  14 LVDS CK  MOSI  MISO x 4  CS I2C Master 2 SCL  SDA I2C Slave 2 SCL  SDA DMCI 17 Data x 16  PixelCK"},{"location":"subtitles/SystemD_2025/","title":"System D","text":""},{"location":"subtitles/SystemD_2025/#mini-daq","title":"Mini DAQ","text":""},{"location":"subtitles/SystemD_2025/#block-diagram","title":"Block Diagram","text":""},{"location":"subtitles/SystemD_2025/#fpga-with-ram","title":"FPGA with RAM","text":"FPGA Power RAM efinix Ti60F100 1.1V Core   3.3V IO 256Mb HyperRAM / 64Mb EEPROM GoWin 1.2V Core   3.3V IO 64Mb~128Mb SDRAM / 32Mb EEPROM"},{"location":"subtitles/SystemD_2025/#zynq-mode","title":"Zynq Mode","text":"<pre><code>Zynq Mode:\n1.Stand alone System\n2.Store daq data in SDCard \n3.Stream daq data from ethenet\n4.Easy to run in parallel\n5.Support KB/Mouse and LCD Screen\n</code></pre>"},{"location":"subtitles/SystemD_2025/#pi-5-mode","title":"Pi 5 Mode","text":"<pre><code>Pi 5 Mode:\n1.Same as Zynq, except use Pi 5\n2.Develop Linux App is more easy on Pi\n</code></pre>"},{"location":"subtitles/SystemD_2025/#price-table","title":"Price Table","text":"Board FPGA FT601 AD7980 AD5662 Mode 1 (efinix Ti60F100 ) 40USD 8USD Zynq    XME0715 160USD X Artix 7 XME0712 A35T 135USD (8USD) Artix 7 A35T 60USD X"},{"location":"subtitles/chromebookDesktop/","title":"Chromebook install GUI Desktop","text":"<pre><code>sudo apt update -y\nsudo apt dist-upgrade -y\n\nsudo apt install task-lxde-desktop -y\nor\nsudo apt install task-kde-desktop -y\n\nsudo apt install xserver-xephyr -y\nsud apt install nano -y\nsudo systemctl disable lightdm\n\nnano /usr/bin/gol\nXephyr -br -fullscreen -resizeable :20 &amp;\nsleep 2\nDISPLAY=:20 startlxde &amp;\n</code></pre>"},{"location":"subtitles/close_loop_experiment/","title":"Close Loop Related","text":""},{"location":"subtitles/close_loop_experiment/#open-ephys-close-loop-delay-measurement","title":"Open Ephys Close Loop Delay Measurement","text":"<p>submillisecond-latency-closed-loop-feedback-with-pcie-prototype-system</p>"},{"location":"subtitles/icestick1Kio/","title":"ICESick 1K IO","text":"<pre><code>from litex.build.generic_platform import *\nfrom litex.build.lattice import LatticePlatform\nfrom litex.build.lattice.programmer import IceStormProgrammer\n\n\n_io = [\n    (\"user_led\", 0, Pins(\"99\"), IOStandard(\"LVCMOS33\")),\n    (\"user_led\", 1, Pins(\"98\"), IOStandard(\"LVCMOS33\")),\n    (\"user_led\", 2, Pins(\"97\"), IOStandard(\"LVCMOS33\")),\n    (\"user_led\", 3, Pins(\"96\"), IOStandard(\"LVCMOS33\")),\n    (\"user_led\", 4, Pins(\"95\"), IOStandard(\"LVCMOS33\")),\n\n    (\"serial\", 0,\n        Subsignal(\"rx\", Pins(\"9\")),\n        Subsignal(\"tx\", Pins(\"8\"), Misc(\"PULLUP\")),\n        Subsignal(\"rts\", Pins(\"7\"), Misc(\"PULLUP\")),\n        Subsignal(\"cts\", Pins(\"4\"), Misc(\"PULLUP\")),\n        Subsignal(\"dtr\", Pins(\"3\"), Misc(\"PULLUP\")),\n        Subsignal(\"dsr\", Pins(\"2\"), Misc(\"PULLUP\")),\n        Subsignal(\"dcd\", Pins(\"1\"), Misc(\"PULLUP\")),\n        IOStandard(\"LVTTL\"),\n    ),\n\n    (\"irda\", 0,\n        Subsignal(\"rx\", Pins(\"106\")),\n        Subsignal(\"tx\", Pins(\"105\")),\n        Subsignal(\"sd\", Pins(\"107\")),\n        IOStandard(\"LVCMOS33\")\n    ),\n\n    (\"spiflash\", 0,\n        Subsignal(\"cs_n\", Pins(\"71\"), IOStandard(\"LVCMOS33\")),\n        Subsignal(\"clk\", Pins(\"70\"), IOStandard(\"LVCMOS33\")),\n        Subsignal(\"mosi\", Pins(\"67\"), IOStandard(\"LVCMOS33\")),\n        Subsignal(\"miso\", Pins(\"68\"), IOStandard(\"LVCMOS33\"))\n    ),\n\n    (\"clk12\", 0, Pins(\"21\"), IOStandard(\"LVCMOS33\"))\n]\n\n_connectors = [\n    (\"GPIO0\", \"44 45 47 48 56 60 61 62\"),\n    (\"GPIO1\", \"119 118 117 116 115 114 113 112\"),\n    (\"PMOD\", \"78 79 80 81 87 88 90 91\")\n]\n\n\nclass Platform(LatticePlatform):\n    default_clk_name = \"clk12\"\n    default_clk_period = 83.333\n\n    def __init__(self):\n        LatticePlatform.__init__(self, \"ice40-hx1k-tq144\", _io, _connectors,\n                                 toolchain=\"icestorm\")\n\n    def create_programmer(self):\n        return IceStormProgrammer()\n</code></pre>"},{"location":"subtitles/icestorm_install/","title":"ICEStorm Install","text":"<p>Verilog Example</p> <pre><code>ubuntu 22\nIcestorm\n\nsudo apt install iverilog -y\nsudo apt install gtkwave -y\nsudo apt install fpga-icestorm -y\nsudo apt install yosys -y\nsudo apt install nextpnr-ice40 -y\nsudo apt install flashrom -y\n\nLitex\nsudo apt install git -y\nsudo apt install python3-pip -y\n\nwget https://raw.githubusercontent.com/enjoy-digital/litex/master/litex_setup.py\nchmod +x litex_setup.py\n./litex_setup.py --init --install --user (--user to install to user directory)\n\npip3 install meson ninja\nsudo ./litex_setup.py --gcc=riscv\nsudo apt install libevent-dev libjson-c-dev\n</code></pre>"},{"location":"subtitles/onix/","title":"ONIX DAQ","text":""},{"location":"subtitles/onix/#onix-docs","title":"Onix DOCs","text":"<p>Onix Doc url</p>"},{"location":"subtitles/onix/#onix-spec","title":"Onix Spec","text":""},{"location":"subtitles/onix/#onix-head-stage","title":"Onix Head Stage","text":""},{"location":"subtitles/onix/#onix-fpga-block-diagram","title":"Onix FPGA Block Diagram","text":""},{"location":"subtitles/onix/#onix-fpga-board","title":"Onix FPGA Board","text":""},{"location":"subtitles/pico_pio_101/","title":"Pico PIO 101","text":""},{"location":"subtitles/pyserial_sample/","title":"PySerial Example","text":"<pre><code>import serial\nimport time\n\n# Configure the serial port\nser = serial.Serial(\n    port='/dev/ttyUSB0',  # Replace with your serial port\n    baudrate=9600,\n    timeout=1\n)\n\n# Function to send data\ndef send_data(data):\n    ser.write(data.encode())\n    print(f\"Sent: {data}\")\n\n# Function to read data\ndef read_data():\n    if ser.in_waiting &gt; 0:\n        data = ser.readline().decode('utf-8').rstrip()\n        print(f\"Received: {data}\")\n        return data\n    return None\n\n# Main loop\ntry:\n    while True:\n        # Send data\n        send_data('Hello, Device!')\n        # Wait for a response\n        response = read_data()\n        # Pause for a moment\n        time.sleep(2)\nexcept KeyboardInterrupt:\n    # Close the serial port\n    ser.close()\n    print(\"Serial port closed.\")\n</code></pre>"},{"location":"subtitles/wavelet_101/","title":"Wavelet 101","text":""},{"location":"subtitles/wavelet_101/#video","title":"Video","text":"<p>Wavelets: a mathematical microscope</p>"},{"location":"subtitles/wavelet_101/#wiki","title":"Wiki","text":"<p>Wavelet Wiki</p> <p>spectrogram</p>"},{"location":"subtitles/wavelet_101/#screen-shot","title":"Screen shot","text":""},{"location":"subtitles/wireless_hs/","title":"Wireless HeadStage 2025","text":""},{"location":"subtitles/wireless_hs/#home-made","title":"Home Made","text":"<p>allenyin wireless Headstage</p>"},{"location":"subtitles/wireless_hs/#commercial","title":"Commercial","text":""},{"location":"subtitles/wireless_hs/#neuralynx-freelynx","title":"neuralynx: freelynx","text":"<p>   neuralynx: freelynx</p> <p></p>"},{"location":"subtitles/wireless_hs/#dspwi","title":"DSPWI","text":"<p>  DSPWI</p>"},{"location":"subtitles/wireless_hs/#deuterontech-wireless-neural-loggers","title":"Deuterontech Wireless Neural Loggers","text":"<p>  euterontech</p>"},{"location":"subtitles/wireless_hs/#blackrockneurotech-cereplex-w","title":"Blackrockneurotech: CerePlex W","text":"<p>   Blackrockneurotech: CerePlex W</p>"},{"location":"subtitles/wireless_hs/#spikegadgets-sprite32","title":"Spikegadgets : Sprite32","text":"<p>  Spikegadgets: Sprite32</p> <p>Sprite 32 document</p>"},{"location":"subtitles/wireless_hs/#tbsi-wireless-headstage","title":"TBSI Wireless Headstage","text":"<p>TBSI Wireless Headstage</p>"}]}